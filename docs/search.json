[
  {
    "objectID": "Biogeochemistry.html#function-to-calculate-mean-and-sem",
    "href": "Biogeochemistry.html#function-to-calculate-mean-and-sem",
    "title": "Biogeochemistry Project",
    "section": "Function to calculate mean and SEM",
    "text": "Function to calculate mean and SEM"
  },
  {
    "objectID": "Biogeochemistry.html#summaries",
    "href": "Biogeochemistry.html#summaries",
    "title": "Biogeochemistry Project",
    "section": "Summaries",
    "text": "Summaries"
  },
  {
    "objectID": "Biogeochemistry.html#plotting-all-stages",
    "href": "Biogeochemistry.html#plotting-all-stages",
    "title": "Biogeochemistry Project",
    "section": "Plotting ALL Stages",
    "text": "Plotting ALL Stages"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Portfolio",
    "section": "",
    "text": "Pronouns: she/her\nEducation: Macalester College, B.A. Biology and Statistics\nShort Bio: My passion lies in translating scientific knowledge into actionable solutions with real-world impact. With my strong theoretical foundation and hands-on experience, I aspire to bridge the gap between responsible, community-based science and practical projects that directly benefit people. As a problem solver with a global perspective and a relational approach to finding solutions, I work well in collaborative environments and care deeply about building meaningful connections within a team. I bring a thoughtful and creative approach to challenges and I am excited to share my experiences, support others in their goals, and help create a space where impactful, actionable ideas can grow."
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "Portfolio",
    "section": "",
    "text": "Pronouns: she/her\nEducation: Macalester College, B.A. Biology and Statistics\nShort Bio: My passion lies in translating scientific knowledge into actionable solutions with real-world impact. With my strong theoretical foundation and hands-on experience, I aspire to bridge the gap between responsible, community-based science and practical projects that directly benefit people. As a problem solver with a global perspective and a relational approach to finding solutions, I work well in collaborative environments and care deeply about building meaningful connections within a team. I bring a thoughtful and creative approach to challenges and I am excited to share my experiences, support others in their goals, and help create a space where impactful, actionable ideas can grow."
  },
  {
    "objectID": "ContentSummary2forreal.html",
    "href": "ContentSummary2forreal.html",
    "title": "Simulation Study on Climate Adaptation using PCA",
    "section": "",
    "text": "We will study the Tree Climate Adaptation by simulating SNPs data associated to Carbon Release rate.\n\n\nPrimary Question: Do studied tree populations have SNPs associated with adaptive traits (e.g., metabolic rate, CO2 release) that allow them to cope with changing temperatures?\nSecondary Question: Can we identify specific SNPs that contribute to reduced CO2 emissions in trees from lower elevations, where temperatures have increased the most due to climate change?\n\n\n\nHypothesis 1: Trees from different populations wil not show any SNPs association with reduced metabolic rates (lower CO2 release) as an adaptation to higher temperatures.\nHypothesis 2: The identified SNPs are linked to genes involved in stress response, carbon metabolism, or mitochondrial efficiency.\nTo answer this questions we will conduct a simulation study.\n\n\n\n\n\nWe will generate:\n\n\n1000 tress with random SNPs (0, 1, 2 copies of a minor allele).\n\nA tertiary CO2 release rate trait (higher, med, low???) influenced by a SNP.\n\n3 tree species at different elevations which are our populations.\n\n\nset.seed(394)\n\nn_individuals &lt;- 1000  \nn_snps &lt;- 15          \nn_populations &lt;- 3     # populations (elevations)\n\n# population labels (equal group sizes for PCA clarity)\npopidx &lt;- rep(1:n_populations, each = ceiling(n_individuals/n_populations))[1:n_individuals]\n\n#MAF patterns for 3 SNP types  (Does this make sense?)\nmaf1 &lt;- c(0, 0.8, 0.7)   # Type 1: Only in populations 2 and 3\nmaf2 &lt;- c(0.3, 0.5, 0.6) # Type 2: Common in all, but varying\nmaf3 &lt;- c(0.3, 0.1, 0.5) # Type 3: Mostly in population 3\n\n# Function to simulate SNPs with population-specific MAFs\nsim_data_onevar &lt;- function(pop, maf) {\n  rbinom(n = length(pop), size = 2, prob = maf[pop])\n}\n\n# Simulate SNPs for each type\nsnps1 &lt;- replicate(5, sim_data_onevar(pop = popidx, maf = maf1))  # 5 SNPs of type 1\nsnps2 &lt;- replicate(5, sim_data_onevar(pop = popidx, maf = maf2))  # 5 SNPs of type 2\nsnps3 &lt;- replicate(5, sim_data_onevar(pop = popidx, maf = maf3))  # 5 SNPs of type 3\n\n# Combine all SNPs into a matrix\nsnp_data &lt;- cbind(snps1, snps2, snps3)\n\n\nelevation &lt;- ifelse(\n  popidx == 1, runif(n_individuals, 100, 300),    # Low elevation\n  ifelse(\n    popidx == 2, runif(n_individuals, 300, 600),  # Mid elevation\n    runif(n_individuals, 600, 1000)               # High elevation\n  )\n)\n\nelevation_category &lt;- case_when(\n  elevation &lt; 300 ~ \"low\",\n  elevation &lt; 600 ~ \"mid\",\n  elevation &gt;= 600 ~ \"high\"\n)\n\n\n# effect sizes to SNPs (adjust indices based on SNP types)\ngenetic_effect &lt;- \n  0.5 * snp_data[, 1] +   # SNP1 (type 1)\n  0.3 * snp_data[, 6] -   # SNP6 (type 2)\n  0.4 * snp_data[, 11]    # SNP11 (type 3)\n\n# environmental effect (higher elevation = lower CO2 release) (Confounder, no?)\nenvironmental_effect &lt;- -0.01 * elevation\n\n# make trait and add noise\ntrait &lt;- genetic_effect + environmental_effect + rnorm(n_individuals, mean = 0, sd = 0.5)\n\n\ntree_pcadata &lt;- data.frame(\n  population = as.factor(popidx),\n  elevation = elevation,\n  elevation_category = as.factor(elevation_category),\n  trait = trait,\n  snp_data\n)\n\n# Name SNP columns\ncolnames(tree_pcadata)[5:(ncol(tree_pcadata))] &lt;- paste0(\"SNP\", 1:ncol(snp_data))"
  },
  {
    "objectID": "ContentSummary2forreal.html#simulation-study-on-climate-adaptation-using-pca",
    "href": "ContentSummary2forreal.html#simulation-study-on-climate-adaptation-using-pca",
    "title": "Simulation Study on Climate Adaptation using PCA",
    "section": "",
    "text": "We will study the Tree Climate Adaptation by simulating SNPs data associated to Carbon Release rate.\n\n\nPrimary Question: Do studied tree populations have SNPs associated with adaptive traits (e.g., metabolic rate, CO2 release) that allow them to cope with changing temperatures?\nSecondary Question: Can we identify specific SNPs that contribute to reduced CO2 emissions in trees from lower elevations, where temperatures have increased the most due to climate change?\n\n\n\nHypothesis 1: Trees from different populations wil not show any SNPs association with reduced metabolic rates (lower CO2 release) as an adaptation to higher temperatures.\nHypothesis 2: The identified SNPs are linked to genes involved in stress response, carbon metabolism, or mitochondrial efficiency.\nTo answer this questions we will conduct a simulation study.\n\n\n\n\n\nWe will generate:\n\n\n1000 tress with random SNPs (0, 1, 2 copies of a minor allele).\n\nA tertiary CO2 release rate trait (higher, med, low???) influenced by a SNP.\n\n3 tree species at different elevations which are our populations.\n\n\nset.seed(394)\n\nn_individuals &lt;- 1000  \nn_snps &lt;- 15          \nn_populations &lt;- 3     # populations (elevations)\n\n# population labels (equal group sizes for PCA clarity)\npopidx &lt;- rep(1:n_populations, each = ceiling(n_individuals/n_populations))[1:n_individuals]\n\n#MAF patterns for 3 SNP types  (Does this make sense?)\nmaf1 &lt;- c(0, 0.8, 0.7)   # Type 1: Only in populations 2 and 3\nmaf2 &lt;- c(0.3, 0.5, 0.6) # Type 2: Common in all, but varying\nmaf3 &lt;- c(0.3, 0.1, 0.5) # Type 3: Mostly in population 3\n\n# Function to simulate SNPs with population-specific MAFs\nsim_data_onevar &lt;- function(pop, maf) {\n  rbinom(n = length(pop), size = 2, prob = maf[pop])\n}\n\n# Simulate SNPs for each type\nsnps1 &lt;- replicate(5, sim_data_onevar(pop = popidx, maf = maf1))  # 5 SNPs of type 1\nsnps2 &lt;- replicate(5, sim_data_onevar(pop = popidx, maf = maf2))  # 5 SNPs of type 2\nsnps3 &lt;- replicate(5, sim_data_onevar(pop = popidx, maf = maf3))  # 5 SNPs of type 3\n\n# Combine all SNPs into a matrix\nsnp_data &lt;- cbind(snps1, snps2, snps3)\n\n\nelevation &lt;- ifelse(\n  popidx == 1, runif(n_individuals, 100, 300),    # Low elevation\n  ifelse(\n    popidx == 2, runif(n_individuals, 300, 600),  # Mid elevation\n    runif(n_individuals, 600, 1000)               # High elevation\n  )\n)\n\nelevation_category &lt;- case_when(\n  elevation &lt; 300 ~ \"low\",\n  elevation &lt; 600 ~ \"mid\",\n  elevation &gt;= 600 ~ \"high\"\n)\n\n\n# effect sizes to SNPs (adjust indices based on SNP types)\ngenetic_effect &lt;- \n  0.5 * snp_data[, 1] +   # SNP1 (type 1)\n  0.3 * snp_data[, 6] -   # SNP6 (type 2)\n  0.4 * snp_data[, 11]    # SNP11 (type 3)\n\n# environmental effect (higher elevation = lower CO2 release) (Confounder, no?)\nenvironmental_effect &lt;- -0.01 * elevation\n\n# make trait and add noise\ntrait &lt;- genetic_effect + environmental_effect + rnorm(n_individuals, mean = 0, sd = 0.5)\n\n\ntree_pcadata &lt;- data.frame(\n  population = as.factor(popidx),\n  elevation = elevation,\n  elevation_category = as.factor(elevation_category),\n  trait = trait,\n  snp_data\n)\n\n# Name SNP columns\ncolnames(tree_pcadata)[5:(ncol(tree_pcadata))] &lt;- paste0(\"SNP\", 1:ncol(snp_data))"
  },
  {
    "objectID": "ContentSummary2forreal.html#looking-at-the-data-do-you-notice-that-there-are-variables-or-other-factors-that-might-influence-our-results-other-than-tree-populations",
    "href": "ContentSummary2forreal.html#looking-at-the-data-do-you-notice-that-there-are-variables-or-other-factors-that-might-influence-our-results-other-than-tree-populations",
    "title": "Simulation Study on Climate Adaptation using PCA",
    "section": "Looking at the data, do you notice that there are variables or other factors that might influence our results other than tree populations?",
    "text": "Looking at the data, do you notice that there are variables or other factors that might influence our results other than tree populations?\n\nhead(tree_pcadata)\n\n  population elevation elevation_category     trait SNP1 SNP2 SNP3 SNP4 SNP5\n1          1  156.3270                low -2.204852    0    0    0    0    0\n2          1  210.7208                low -2.137725    0    0    0    0    0\n3          1  156.7825                low -1.525669    0    0    0    0    0\n4          1  196.8221                low -1.504617    0    0    0    0    0\n5          1  153.4105                low -1.494680    0    0    0    0    0\n6          1  281.4923                low -3.128641    0    0    0    0    0\n  SNP6 SNP7 SNP8 SNP9 SNP10 SNP11 SNP12 SNP13 SNP14 SNP15\n1    1    0    0    0     0     1     0     0     1     1\n2    0    0    0    1     0     1     2     0     0     1\n3    0    2    1    1     0     0     1     1     1     0\n4    1    1    2    0     1     1     0     0     1     0\n5    0    1    0    1     0     1     0     1     1     1\n6    0    1    0    0     0     0     0     1     1     1\n\ndim(tree_pcadata)\n\n[1] 1000   19\n\n\n\n\n\n\n\n\nWhat is the other factor?\n\n\n\nHint: Starts with “E”, and ends with “levation”\n\n\n\nWhy do we care about this other factor? How could it play a role in our experiment?\n\n\n🚩 Confounding in GWAS 🚩\n“A confounder is a common cause of both the causal variable of interest and the outcome (e.g. living area could be a confounder of fireplace presence and house price)” (STAT 155 Notes, Macalester Statistics Faculty).\nA variable \\(X_2\\) is a confounder if: - causally associated with the outcome Y in the population - causally associated with the predictor of interest \\(X_1\\) in the population (i.e., \\(X_2\\) is a common cause of both the outcome and predictor of interest)\n\n\n\nCausal Graph\n\n\n\n\nGenerally in GWAS…\n🧬 Genetic Variation Across Elevations 🧬\nEnvironmental gradients (e.g., elevation, climate) can drive spatially structured genetic variation through local adaptation. For example, populations at high altitudes often exhibit allele frequency shifts in genes like EPAS1, linked to hypoxia tolerance (e.g., Tibetan populations as showed by Simonson et al., 2010).\nIn GWAS, such geographic or environmental clines can confound SNP-trait associations if unmodeled.\nPCA helps to:\nDetect continuous genetic gradients (e.g., allele frequency changes correlated with elevation).\n\nAdjust for confounding by including top principal components (PCs) as covariates, isolating true SNP-trait signals from spatially structured noise.\n\n\nSpecifically for this study…\nThe question marks on our Causal Graph that go from Elevation to Tree genus, and Elevation to Metabolic rate indicate that there might be a causality relationship that is associated with both the treatment and the outcome of our experiment.\n\nTemperatures are very low at high altitudes and can remain below 0 °C during summer -&gt; Low temperatures are identified as critical limitations to plant biochemical processes and physiological activities (Larcher and Bauer 1981, cited by Zheng et al.,2021).\nEvolutionary theories talk about how environmental conditions lead to speciation throuhg natural selection, highlighting how genetic variation play a role on this process (Stebbins, 1950)\n\n\n\nWhy do we want to use PCA (Principal Component Analysis)?\nPCA identifies axes of genetic variation (principal components) that capture ancestry. These axes/ancestry often correlate with unmeasured confounders, like in our experiment geographic elevation. By including top PCs as covariates in GWAS, we adjust for latent population structure, reducing spurious SNP-trait associations (Price et al., 2010; National Academies, 2023).\n🌱 Population Structure 🌱\nPopulation Structure refers all non-random genetic variation across human groups that are shaped by historical demography (e.g., migration, drift, etc) are what defines population structure (Price, A. et al., 2010). In GWAS, we study the association between certain SNPs to a trait, therefore when we have variation that is connected to a human group, wheather or no there is association with the trait, it Introduces spurious (false) associations between genetic variants and traits (National Academies, 2023; Bryc, K. 2015). This is a current challenge that GWAS tries to address by accounting for it and developing methods that address population structure, family relateness and cryptic relateness (Price, A. et al., 2010)."
  },
  {
    "objectID": "ContentSummary2forreal.html#exploring-the-data",
    "href": "ContentSummary2forreal.html#exploring-the-data",
    "title": "Simulation Study on Climate Adaptation using PCA",
    "section": "Exploring the Data",
    "text": "Exploring the Data\n\ntree_pcadata %&gt;% \n  group_by(population) %&gt;% \n  count()\n\n# A tibble: 3 × 2\n# Groups:   population [3]\n  population     n\n  &lt;fct&gt;      &lt;int&gt;\n1 1            334\n2 2            334\n3 3            332\n\n\nAre there any SNPs that seem to be more common in one population than the other? By how much do the allele frequencies in the two populations differ for each SNP?"
  },
  {
    "objectID": "ContentSummary2forreal.html#running-pca",
    "href": "ContentSummary2forreal.html#running-pca",
    "title": "Simulation Study on Climate Adaptation using PCA",
    "section": "Running PCA",
    "text": "Running PCA\n\ntree_geno &lt;- tree_pcadata %&gt;% \n  select(-population, -trait, -elevation, -elevation_category)\n\n# Run PCA on SNP data\ntree_pca_out &lt;- prcomp(tree_geno, center = TRUE, scale = TRUE)\n\n\nExtracting Loadings and Scores\n\n# pull out scores, loadings, and variance\nscores_tree_pca &lt;- tree_pca_out$x\nloadings_tree_pca&lt;- tree_pca_out$rotation\nvar_tree_pca &lt;- (tree_pca_out$sdev)^2\n\n\n\n\n\n\n\nWhy do we use prcomp?\n\n\n\nprcomp returns a list with class “prcomp” containing the following components:\n\nLoadings: rotation\nThis is the matrix of variable loadings (eigenvectors). Each column corresponds to a principal component, and each row corresponds to a variable in the original data. These loadings describe how each original variable contributes to the principal components.\nScores: x\nThis contains the scores for the PCA analysis. These are the coordinates of the observations (samples) in the new principal component space. Each column corresponds to a principal component, and each row corresponds to an observation.\n\n\n\n\n\n\n\nPlot Results\n\nScores\n\ncolnames(scores_tree_pca)\n\n [1] \"PC1\"  \"PC2\"  \"PC3\"  \"PC4\"  \"PC5\"  \"PC6\"  \"PC7\"  \"PC8\"  \"PC9\"  \"PC10\"\n[11] \"PC11\" \"PC12\" \"PC13\" \"PC14\" \"PC15\"\n\nscores_tree_pca %&gt;%\n  as.data.frame() %&gt;% # convert pca_scores into a data frame for plotting\n  mutate(population = as.factor(tree_pcadata$population)) %&gt;%  # add the population labels\n  ggplot(aes(x = PC1, y = PC2, color = population)) + # then plot\n  geom_point() + \n  scale_color_brewer(palette = 'Dark2')+\n  theme_minimal()\n\n\n\n\n\n\n\nscores_tree_pca %&gt;%\n  as.data.frame() %&gt;% # convert pca_scores into a data frame for plotting\n  mutate(elevation_categorical = as.factor(tree_pcadata$elevation_category)) %&gt;%  # add the population labels\n  ggplot(aes(x = PC1, y = PC2, color = elevation_category)) + # then plot\n  geom_point() + \n  scale_color_brewer(palette = 'Dark2')+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInterpretation\n\n\n\n\n\n\n\n\nParallel Coordinates Plot\n\n# parallel coordinates plot\nscores_tree_pca %&gt;%\n  as.data.frame() %&gt;%\n  mutate(population = as.factor(tree_pcadata$population)) %&gt;% \n  ggparcoord(columns = 1:15, groupColumn = 'population', alpha = 0.2) + \n  theme_minimal() + \n  scale_color_brewer(palette = 'Dark2')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInterpretation\n\n\n\n\n\n\n\n\nLoadings Plot\n\npc1_loadings &lt;- tree_pca_out$rotation[, 1]\n\n\nloadings_df &lt;- data.frame(\n  SNP = rownames(tree_pca_out$rotation),  # SNP names\n  Loading = pc1_loadings             # Loadings for PC1\n)\n\nggplot(loadings_df, aes(x = reorder(SNP, Loading), y = Loading, fill = Loading)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"SNP\", y = \"Loading\", title = \"Loadings of SNPs for PC1\",\n    fill = \"Loading\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWHich SNPs contribute the most to PC1?\n\n\n\n\n\n\n\n\n\n\n\nVariance Explained\nWhat proportion of total variance each PC explains, we can create what’s known as a scree plot. The code chunk below calculates the proportion of variance explained.\n\n# calculate proportion of variance explained\ntree_total_var &lt;- sum(var_tree_pca)\ntree_pve &lt;- var_tree_pca/tree_total_var\n\n\n\n\n\nVisualizing the Proportion of variance explained compares across the PCs\n\n# SNPs\ntree_pve %&gt;%\n  as.data.frame() %&gt;%\n  mutate(index = seq_len(length(var_tree_pca))) %&gt;%\n  ggplot(aes(x = index, y = tree_pve)) + \n  geom_point() + \n  geom_line() + \n  labs(x = 'SNP Number', y = 'Percent of Variance Explained') + \n  theme_minimal()\n\n\n\n\n\n\n\n# PCs\n\n# Create data frame for plotting\ntree_variance_df &lt;- data.frame(\n  PC = factor(1:length(tree_pve)),\n  Individual = tree_pve,\n  Cumulative = cumsum(tree_pve)\n  )\n\n# Create scree plot\nggplot(tree_variance_df, aes(x = PC)) +\n  geom_col(aes(y = Individual)) +\n  geom_point(aes(y = Cumulative)) +\n  geom_line(aes(y = Cumulative, group = 1)) +\n  scale_y_continuous(labels = scales::percent) +\n  labs(x = \"Principal Component\", y = \"Proportion of Variance Explained\", title = \"Scree Plot with Cumulative Variance\") +\n  theme_minimal() +\n  theme(panel.grid.major.x = element_blank())"
  },
  {
    "objectID": "ContentSummary2forreal.html#what-happens-if-we-would-have-not-realized-about-the-confounding-on-our-data",
    "href": "ContentSummary2forreal.html#what-happens-if-we-would-have-not-realized-about-the-confounding-on-our-data",
    "title": "Simulation Study on Climate Adaptation using PCA",
    "section": "What happens if we would have not realized about the confounding on our data?",
    "text": "What happens if we would have not realized about the confounding on our data?\n\nOmitted Variable Bias\nReminder: Bias is how long or how far (on average) we are to the “truth”.\nIn this context we are talking about parameters, so…\nIf \\(\\hat{\\theta}\\) estimates \\(\\theta\\), bias is \\(E[\\hat{\\theta}] - \\theta\\).\nWhen confounding variables are omitted:\n- Estimates become biased (\\(E[\\hat{\\beta} \\neq \\beta\\))\n- Variance estimates are also distorted\n\nExpected Value Rules (Probability Foundations):\nFor random variables \\(X,Y\\) and constants \\(a,b\\) (aka Linearity of Expectation):\n\\[\n\\begin{aligned}\nE[X + Y] &= E[X] + E[Y] \\\\  \nE[aX] &= aE[X] \\\\  \nE[b] &= b  \n\\end{aligned}\n\\]\n\n\nProof: OLS Unbiasedness (Correct Model)\nModel: \\(y = X\\beta + \\epsilon\\), where \\(E[\\epsilon] = 0\\)\nEstimator: \\(\\hat{\\beta} = (X^TX)^{-1}X^Ty\\)\n\\[\n\\begin{align*}\nE[\\hat{\\beta}] &= E[(X^TX)^{-1}X^Ty] \\\\  \n&= (X^TX)^{-1}X^TE[y] \\quad \\text{(Linearity of expectation)} \\\\  \n&= (X^TX)^{-1}X^T X\\beta \\quad \\text{(Since } E[y] = X\\beta) \\\\  \n&= \\beta \\quad\n\\end{align*}\n\\]\n\n\nProof: OLS Bias (Omitted Variable) &lt;- What would happen to us if we don’t think about Elevation!!!\nTrue Model: \\(y = X\\beta + Z\\gamma + \\epsilon\\)\nFitted Model: \\(y = X\\beta + \\epsilon^*\\) (omits \\(Z\\))\n$$\n\\[\\begin{align*}\n\\hat{\\beta} &= (X^TX)^{-1}X^Ty \\\\  \n&= (X^TX)^{-1}X^T(X\\beta + Z\\gamma + \\epsilon) \\\\  \n&= \\beta + (X^TX)^{-1}X^TZ\\gamma + (X^TX)^{-1}X^T\\epsilon  \n\\end{align*}\\] $$ Taking expectations:\n$$ \\[\\begin{align*}\nE[\\hat{\\beta}] &= \\beta + \\underbrace{(X^TX)^{-1}X^TZ\\gamma}_{\\text{Bias term}} \\quad \\text{(if } X \\text{ and } Z \\text{ are correlated)} \\\\  \nE[\\hat{\\beta}] &\\neq \\beta \\quad\n\\end{align*}\\]\n$$\n\n\n\nReferences:\n\nNational Academies of Sciences, Engineering, and Medicine. 2023. Using Population Descriptors in Genetics and Genomics Research: A New Framework for an Evolving Field. Washington, DC: The National Academies Press. https://doi.org/10.17226/26902.\nBryc, K., Durand, E. Y., Macpherson, J. M., Reich, D., & Mountain, J. L. (2015). The Genetic Ancestry of African Americans, Latinos, and European Americans across the United States. The American Journal of Human Genetics, 96(1), 37-53. https://doi.org/10.1016/j.ajhg.2014.11.010\nNovembre, J., Johnson, T., Bryc, K., Kutalik, Z., Boyko, A. R., Auton, A., Indap, A., King, K. S., Bergmann, S., Nelson, M. R., Stephens, M., & Bustamante, C. D. (2008). Genes mirror geography within Europe. Nature, 456(7218), 98-101. https://doi.org/10.1038/nature07331\nPrice, A. L., Zaitlen, N. A., Reich, D., & Patterson, N. (2010). New approaches to population stratification in genome-wide association studies. Nature Reviews. Genetics, 11(7), 459–463. https://doi.org/10.1038/nrg2813\nSimonson, T. S., Yang, Y., Huff, C. D., Yun, H., Qin, G., Witherspoon, D. J., Bai, Z., Lorenzo, F. R., Xing, J., Jorde, L. B., Prchal, J. T., & Ge, R. (2010). Genetic Evidence for High-Altitude Adaptation in Tibet. Science, 329(5987), 72-75. https://doi.org/10.1126/science.1189406\nStebbins, G. L. (1950). Variation and Evolution in Plants. Columbia University Press. https://doi.org/10.7312/steb94536\nZheng, L., Gaire, N. P., & Shi, P. (2021). High-altitude tree growth responses to climate change across the Hindu Kush Himalaya. Journal of Plant Ecology, 14(5), 829-842. https://doi.org/10.1093/jpe/rtab035"
  },
  {
    "objectID": "Content_Summary2.html",
    "href": "Content_Summary2.html",
    "title": "Nibia Content Summary 2",
    "section": "",
    "text": "We will study the Tree Climate Adaptation by simulating SNPs data associated to Carbon Release rate at different elevations.\n\n\nPrimary Question: Do tree populations at different elevations have SNPs associated with adaptive traits (e.g., metabolic rate, CO2 release) that allow them to cope with changing temperatures?\nSecondary Question: Can we identify specific SNPs that contribute to reduced CO2 emissions in trees from lower elevations, where temperatures have increased the most due to climate change?\n\n\n\nHypothesis 1: Trees at lower elevations have SNPs associated with reduced metabolic rates (lower CO2 release) as an adaptation to higher temperatures.\nHypothesis 2: These SNPs are under positive selection in lower-elevation populations due to climate change pressures.\nHypothesis 3: The identified SNPs are linked to genes involved in stress response, carbon metabolism, or mitochondrial efficiency.\n\n\n\n\n🌱 Population Structure 🌱\n🧬 Genetic Variation Across Elevations 🧬\nIf there are observations that fit the population structures we are expecting?????\n🚩 Confounding in GWAS 🚩\n\n\n\n\nWhat are the scores?\n\nValues that this new variables take. Each variable outputs a score. PC coordinates are the score, kind of like the new value that this transformation take. For example: 0.3 in PC1, and 0.8 in PC2\n\nWhat are the loadings? Coefficient of the The a’s are the loadings (weight, contribution of each of the og variables to this new variable PC.)\nDoes the order of the PCs have any particular meaning? The order decrease from the Linear combination that explains most variation"
  },
  {
    "objectID": "Content_Summary2.html#simulation-study-on-climate-adaptation-using-pca",
    "href": "Content_Summary2.html#simulation-study-on-climate-adaptation-using-pca",
    "title": "Nibia Content Summary 2",
    "section": "",
    "text": "We will study the Tree Climate Adaptation by simulating SNPs data associated to Carbon Release rate at different elevations.\n\n\nPrimary Question: Do tree populations at different elevations have SNPs associated with adaptive traits (e.g., metabolic rate, CO2 release) that allow them to cope with changing temperatures?\nSecondary Question: Can we identify specific SNPs that contribute to reduced CO2 emissions in trees from lower elevations, where temperatures have increased the most due to climate change?\n\n\n\nHypothesis 1: Trees at lower elevations have SNPs associated with reduced metabolic rates (lower CO2 release) as an adaptation to higher temperatures.\nHypothesis 2: These SNPs are under positive selection in lower-elevation populations due to climate change pressures.\nHypothesis 3: The identified SNPs are linked to genes involved in stress response, carbon metabolism, or mitochondrial efficiency.\n\n\n\n\n🌱 Population Structure 🌱\n🧬 Genetic Variation Across Elevations 🧬\nIf there are observations that fit the population structures we are expecting?????\n🚩 Confounding in GWAS 🚩\n\n\n\n\nWhat are the scores?\n\nValues that this new variables take. Each variable outputs a score. PC coordinates are the score, kind of like the new value that this transformation take. For example: 0.3 in PC1, and 0.8 in PC2\n\nWhat are the loadings? Coefficient of the The a’s are the loadings (weight, contribution of each of the og variables to this new variable PC.)\nDoes the order of the PCs have any particular meaning? The order decrease from the Linear combination that explains most variation"
  },
  {
    "objectID": "Content_Summary2.html#simulating-tree-genetic-data",
    "href": "Content_Summary2.html#simulating-tree-genetic-data",
    "title": "Nibia Content Summary 2",
    "section": "🌳 Simulating Tree Genetic Data 🌳",
    "text": "🌳 Simulating Tree Genetic Data 🌳\nWe will generate:\n\n\n1000 tress with random SNPs (0, 1, 2 copies of a minor allele).\n\nA tertiary CO2 release rate trait (higher, med, low???) influenced by a SNP.\n\n3 tree species at different elevations which are our populations.\n\n\nConsiderations for simulating data\n\nUsing runif: why?\n\n\n\n\n\n\n\nWhy do we use runif?\n\n\n\nAdd explanation\n\n\n\n\nOur Dataset\n\nset.seed(394)\n\nn_individuals &lt;- 1000  # individuals\nn_snps &lt;- 15          # SNPs\nn_populations &lt;- 3    # populations (elevations)\n\n# Make population labels (Populations will be trees of the same species but different genus)\npopulation &lt;- sample(1:n_populations, n_individuals, replace = TRUE)\n\n# make elevation (environmental covariate????)\n# I am using runif to simulate my data because I want my 3 elevations (continuous variable) to take any value within the range that I had specified. Also looks like rnom would be used in contexts where there are no limits (which in my example would give values that don't make sense)\n\nelevation &lt;- ifelse(population == 1, runif(n_individuals, 100, 300),  # Lower on the slope\n                    ifelse(population == 2, runif(n_individuals, 300, 600),  # Mid-slope\n                           runif(n_individuals, 600, 1000)))  # Higher in the slope\n\n# making elevation a category since it is hard to do the later steps with the continuos variables\nelevation_categorical &lt;- case_when(\n  elevation &lt; 300 ~ \"low\",       # Assign \"low\" if elevation &lt; 300\n  elevation &lt; 600 ~ \"mid\",       # Assign \"mid\" if 300 &lt;= elevation &lt; 600\n  elevation &gt;= 600 ~ \"high\"      # Assign \"high\" if elevation &gt;= 600\n)\n\nIf we can sample() and rep()\n\n# Since I did not see any population separation, I am trying some code that DeepSeek gave me\n\n# Simulate SNP data with population-specific allele frequencies\nsnp_data &lt;- matrix(nrow = n_individuals, ncol = n_snps)\nfor (i in 1:n_snps) {\n  # Different MAF for each population\n  maf_pop1 &lt;- runif(1, min = 0.1, max = 0.3)  # Low MAF for population 1\n  maf_pop2 &lt;- runif(1, min = 0.4, max = 0.6)  # Medium MAF for population 2\n  maf_pop3 &lt;- runif(1, min = 0.7, max = 0.9)  # High MAF for population 3\n\n  # Assign MAF based on population\n  maf &lt;- ifelse(population == 1, maf_pop1,\n                ifelse(population == 2, maf_pop2, maf_pop3))\n\n  # Simulate SNP data\n  snp_data[, i] &lt;- rbinom(n_individuals, size = 2, prob = maf)\n}\n\nQuestion for Kelsey: Could you please send me the code that allows us to determine the difference frequency of certain SNPs in our different populations?\n\n# # minor allele frequencies\n# maf &lt;- runif(n_snps, min = 0.1, max = 0.6)  # MAF between 10% and 60%\n# \n# # I made a function based on what I did for Content Summary 2, specially because now we have more SNPs (we just learned this in STAT212!!!!)\n# # Also I made a matrix instead of a data frame because (apparently!!) it will be easier to perform operations with other matrixes (dataframes that I have converted, too).\n# \n# snp_data &lt;- matrix(nrow = n_individuals, ncol = n_snps)\n# for (i in 1:n_snps) {\n#   snp_data[, i] &lt;- rbinom(n_individuals, size = 2, prob = maf[i])\n# }\n# \n# # I asked DeepSeek how would that for loop look like using map(), but I don't find it more intuitive or readable :(\n# # snp_data &lt;- map_dfc(1:n_snps, ~ rbinom(n_individuals, size = 2, prob = maf[.x]))\n# # snp_data &lt;- as.matrix(snp_data)\n\n# View first few rows\nhead(snp_data)\n\n\n# CO2 release rate (trait) influenced by SNPs and elevation (we know, but supposedly others would not know bcs that is the twist of the covariate)\n\n# I was going to use the MAF that i had in my previous Content Summary, but I was not sure if I would have to create the \ngenetic_effect &lt;- 0.5 * snp_data[, 1] + 0.3 * snp_data[, 7] - 0.4 * snp_data[, 11]\nenvironmental_effect &lt;- -0.01 * elevation  # higher elevation reduces C02 release rate, bcs it is colder\n#I am adding noise so it is not as perfect looking to our trait\ntrait &lt;- genetic_effect + environmental_effect + rnorm(n_individuals, mean = 0, sd = 0.5)\n\n# Combine into a data frame\ntree_pcadata &lt;- data.frame(population = as.factor(population), elevation = elevation, trait = trait, elevation_categorical = elevation_categorical, snp_data)\ncolnames(tree_pcadata)[4:(n_snps + 3)] &lt;- paste0(\"SNP\", 1:n_snps)\n\n# View the first few rows\nhead(tree_pcadata)\n\n  population elevation      trait SNP1 SNP2 SNP3 SNP4 SNP5 SNP6 SNP7 SNP8 SNP9\n1          1  207.4532  -1.316087  low    1    1    0    0    2    0    0    0\n2          2  386.1461  -3.223816  mid    1    1    1    1    1    0    0    0\n3          2  412.6859  -2.947228  mid    2    1    0    2    2    2    2    0\n4          2  462.2888  -5.350806  mid    1    1    1    1    0    1    0    1\n5          2  335.6693  -3.119765  mid    1    1    1    1    2    2    2    1\n6          3  981.6295 -10.255040 high    1    2    1    2    2    1    1    2\n  SNP10 SNP11 SNP12 SNP13 SNP14 SNP15 X15\n1     2     0     0     0     2     0   1\n2     2     1     0     2     2     1   0\n3     1     0     0     1     2     1   2\n4     0     2     1     0     2     0   2\n5     0     1     0     1     1     1   1\n6     1     0     2     1     1     1   2\n\ndim(tree_pcadata)\n\n[1] 1000   19"
  },
  {
    "objectID": "Content_Summary2.html#exploring-the-data",
    "href": "Content_Summary2.html#exploring-the-data",
    "title": "Nibia Content Summary 2",
    "section": "Exploring the Data",
    "text": "Exploring the Data\n\ntree_pcadata %&gt;% \n  group_by(population) %&gt;% \n  count()\n\n# A tibble: 3 × 2\n# Groups:   population [3]\n  population     n\n  &lt;fct&gt;      &lt;int&gt;\n1 1            334\n2 2            361\n3 3            305\n\n\nAre there any SNPs that seem to be more common in one population than the other? By how much do the allele frequencies in the two populations differ for each SNP?\n\n# function to get empirical minor allele frequency\n## count up how many minor alleles are observed\n## divide by two times the number of people\nget_MAF &lt;- function(snp){\n  sum(snp)/(2*length(snp))\n}\n\n# get observed allele frequency for each population\nmaf_by_population &lt;- tree_pcadata %&gt;%\n  group_by(population) %&gt;%\n  summarize(across(starts_with(\"SNP\"), get_MAF)) #Since I have elevation_categorical, it was getting a little crazy\n\nError in `summarize()`:\nℹ In argument: `across(starts_with(\"SNP\"), get_MAF)`.\nℹ In group 1: `population = 1`.\nCaused by error in `across()`:\n! Can't compute column `SNP1`.\nCaused by error in `sum()`:\n! invalid 'type' (character) of argument"
  },
  {
    "objectID": "Content_Summary2.html#running-pca",
    "href": "Content_Summary2.html#running-pca",
    "title": "Nibia Content Summary 2",
    "section": "Running PCA",
    "text": "Running PCA\n\nhead(tree_pcadata)\n\n  population elevation      trait SNP1 SNP2 SNP3 SNP4 SNP5 SNP6 SNP7 SNP8 SNP9\n1          1  207.4532  -1.316087  low    1    1    0    0    2    0    0    0\n2          2  386.1461  -3.223816  mid    1    1    1    1    1    0    0    0\n3          2  412.6859  -2.947228  mid    2    1    0    2    2    2    2    0\n4          2  462.2888  -5.350806  mid    1    1    1    1    0    1    0    1\n5          2  335.6693  -3.119765  mid    1    1    1    1    2    2    2    1\n6          3  981.6295 -10.255040 high    1    2    1    2    2    1    1    2\n  SNP10 SNP11 SNP12 SNP13 SNP14 SNP15 X15\n1     2     0     0     0     2     0   1\n2     2     1     0     2     2     1   0\n3     1     0     0     1     2     1   2\n4     0     2     1     0     2     0   2\n5     0     1     0     1     1     1   1\n6     1     0     2     1     1     1   2\n\ntree_geno &lt;- tree_pcadata %&gt;%\n  select(-population, -trait, - elevation, -elevation_categorical)\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(elevation_categorical)\n\n  # Now:\n  data %&gt;% select(all_of(elevation_categorical))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\nError in `select()`:\n! Can't select columns that don't exist.\n✖ Columns `low`, `mid`, `mid`, `mid`, `mid`, etc. don't exist.\n\nhead(tree_geno)\n\nError: object 'tree_geno' not found\n\n\n\ntree_pca_out &lt;- prcomp(tree_geno, center = TRUE, scale = TRUE)\n\nError: object 'tree_geno' not found\n\n\n\n\n\n\n\n\nWhy do we use prcomp?\n\n\n\nprcomp returns a list with class “prcomp” containing the following components:\n\nLoadings: rotation\nThis is the matrix of variable loadings (eigenvectors). Each column corresponds to a principal component, and each row corresponds to a variable in the original data. These loadings describe how each original variable contributes to the principal components.\nScores: x\nThis contains the scores for the PCA analysis. These are the coordinates of the observations (samples) in the new principal component space. Each column corresponds to a principal component, and each row corresponds to an observation.\n\n\n\n\n\n\nExtracting Loadings and Scores\n\n# loadings\n\ntree_pca_loadings &lt;- tree_pca_out$rotation\n\nError: object 'tree_pca_out' not found\n\n#scores\n\ntree_pca_scores &lt;- tree_pca_out$x\n\nError: object 'tree_pca_out' not found\n\n\n\n\n\n\n\nPlot Results\n\nScores\n\ncolnames(tree_pcadata)\n\n [1] \"population\" \"elevation\"  \"trait\"      \"SNP1\"       \"SNP2\"      \n [6] \"SNP3\"       \"SNP4\"       \"SNP5\"       \"SNP6\"       \"SNP7\"      \n[11] \"SNP8\"       \"SNP9\"       \"SNP10\"      \"SNP11\"      \"SNP12\"     \n[16] \"SNP13\"      \"SNP14\"      \"SNP15\"      \"X15\"       \n\ntree_pca_scores %&gt;%\n  as.data.frame() %&gt;% # convert pca_scores into a data frame for plotting\n  mutate(population = as.factor(tree_pcadata$population)) %&gt;%  # add the population labels\n  ggplot(aes(x = PC1, y = PC2, color = population)) + # then plot\n  geom_point() + \n  scale_color_brewer(palette = 'Dark2')+\n  theme_minimal()\n\nError: object 'tree_pca_scores' not found\n\ntree_pca_scores %&gt;%\n  as.data.frame() %&gt;% # convert pca_scores into a data frame for plotting\n  mutate(elevation_categorical = as.factor(tree_pcadata$elevation_categorical)) %&gt;%  # add the population labels\n  ggplot(aes(x = PC1, y = PC2, color = elevation_categorical)) + # then plot\n  geom_point() + \n  scale_color_brewer(palette = 'Dark2')+\n  theme_minimal()\n\nError: object 'tree_pca_scores' not found\n\n\n\n\n\n\n\n\nInterpretation\n\n\n\n\n\n\n\n\nParallel Coordinates Plot\n\n# parallel coordinates plot\ntree_pca_scores %&gt;%\n  as.data.frame() %&gt;%\n  mutate(population = as.factor(tree_pcadata$population)) %&gt;% \n  ggparcoord(columns = 1:15, groupColumn = 'population', alpha = 0.2) + \n  theme_minimal() + \n  scale_color_brewer(palette = 'Dark2')\n\nError: object 'tree_pca_scores' not found\n\n\n\n\n\n\n\n\nInterpretation\n\n\n\n\n\n\n\n\nLoadings Plot\n\npc1_loadings &lt;- tree_pca_out$rotation[, 1]\n\nError: object 'tree_pca_out' not found\n\nloadings_df &lt;- data.frame(\n  SNP = rownames(tree_pca_out$rotation),  # SNP names\n  Loading = pc1_loadings             # Loadings for PC1\n)\n\nError: object 'tree_pca_out' not found\n\nggplot(loadings_df, aes(x = reorder(SNP, Loading), y = Loading, fill = Loading)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"SNP\", y = \"Loading\", title = \"Loadings of SNPs for PC1\",\n    fill = \"Loading\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\nError: object 'loadings_df' not found\n\n\n\n\n\n\n\n\nInterpretations\n\n\n\nSNP1 and SNP2 contribute the most for PC1 positively. Then the other three that also have some big positive contributions are SNP 3,4, and 5.\n\n\n\n\n\n\n\nVariance Explained\nWhat proportion of total variance each PC explains, we can create what’s known as a scree plot. The code chunk below calculates the proportion of variance explained.\n\n# extract variance of each PC\ntree_pca_var &lt;- (tree_pca_out$sdev)^2\n\nError: object 'tree_pca_out' not found\n\n# calculate proportion of variance explained\ntree_total_var &lt;- sum(tree_pca_var)\n\nError: object 'tree_pca_var' not found\n\ntree_pve &lt;- tree_pca_var/tree_total_var\n\nError: object 'tree_pca_var' not found\n\n\n\n\n\n\nVisualizing the Proportion of variance explained compares across the PCs\n\n# SNPs\ntree_pve %&gt;%\n  as.data.frame() %&gt;%\n  mutate(index = seq_len(length(tree_pca_var))) %&gt;%\n  ggplot(aes(x = index, y = tree_pve)) + \n  geom_point() + \n  geom_line() + \n  labs(x = 'SNP Number', y = 'Percent of Variance Explained') + \n  theme_minimal()\n\nError: object 'tree_pve' not found\n\n# PCs\n\n# Create data frame for plotting\ntree_variance_df &lt;- data.frame(\n  PC = factor(1:length(tree_pve)),\n  Individual = tree_pve,\n  Cumulative = cumsum(tree_pve)\n  )\n\nError: object 'tree_pve' not found\n\n# Create scree plot\nggplot(tree_variance_df, aes(x = PC)) +\n  geom_col(aes(y = Individual)) +\n  geom_point(aes(y = Cumulative)) +\n  geom_line(aes(y = Cumulative, group = 1)) +\n  scale_y_continuous(labels = scales::percent) +\n  labs(x = \"Principal Component\", y = \"Proportion of Variance Explained\", title = \"Scree Plot with Cumulative Variance\") +\n  theme_minimal() +\n  theme(panel.grid.major.x = element_blank())\n\nError: object 'tree_variance_df' not found"
  },
  {
    "objectID": "DiD_ColombiaVenezuela.html#data-preparation",
    "href": "DiD_ColombiaVenezuela.html#data-preparation",
    "title": "The Role of De-Venezuelization in Shaping Public Sentiment in Colombia: Difference in Difference analysis",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nLoading packages"
  },
  {
    "objectID": "DiD_ColombiaVenezuela.html#loading-latinobarometro-data",
    "href": "DiD_ColombiaVenezuela.html#loading-latinobarometro-data",
    "title": "The Role of De-Venezuelization in Shaping Public Sentiment in Colombia: Difference in Difference analysis",
    "section": "Loading Latinobarometro Data",
    "text": "Loading Latinobarometro Data\n\n\n### Loading 2020 and 2023 .rdata datasets\n\nload(\"~/Desktop/Nibia/DiD/data/Latinobarometro_2020_Eng_Rdata_v1_0.rdata\")\n\nload(\"~/Desktop/Nibia/DiD/data/Latinobarometro_2023_Eng_Rdata_v1_0.rdata\")\n\n\nLoading 2018 .dta data set\n\nLB2018 &lt;- read_dta(\"~/Desktop/Nibia/DiD/data/Latinobarometro_2018_Esp_Stata_v20190303.dta\")"
  },
  {
    "objectID": "DiD_ColombiaVenezuela.html#select-varibles-of-interest",
    "href": "DiD_ColombiaVenezuela.html#select-varibles-of-interest",
    "title": "The Role of De-Venezuelization in Shaping Public Sentiment in Colombia: Difference in Difference analysis",
    "section": "Select Varibles of interest",
    "text": "Select Varibles of interest\n\nLB2018 &lt;- LB2018 %&gt;% \n  select(\"NUMINVES\", \"IDENPA\", \"REG\", \"CIUDAD\", \"TAMCIUD\", \n  \"EDAD\", \"SEXO\", \"S1\", \"S16\", \"S26\", \"S10\", \"P42NC\", \"P20STGBSC\", \"P22ST\")\nLB2020 &lt;- Latinobarometro_2020_Eng %&gt;%\n  select(\"numinves\", \"idenpa\", \"reg\", \"ciudad\", \"tamciud\", \n  \"edad\", \"sexo\", \"s1\", \"s21\", \"s30\", \"s16\", \"p38n\", \"p17stgbs\", \"p18st\") \nLB2023 &lt;- Latinobarometro_2023_Eng_v1_0 %&gt;%\n  select(\"numinves\", \"idenpa\", \"reg\", \"ciudad\", \"tamciud\", \n  \"edad\", \"sexo\", \"S2\", \"S16\", \"S24\", \"S21B\", \"P32INN\", \"P15STGBS\", \"P16ST\")\n\n\nCheck the columns\n\n# Check column names in each dataset\ncolnames(LB2018)  # Inspect column names in LB2018\n\n [1] \"NUMINVES\"  \"IDENPA\"    \"REG\"       \"CIUDAD\"    \"TAMCIUD\"   \"EDAD\"     \n [7] \"SEXO\"      \"S1\"        \"S16\"       \"S26\"       \"S10\"       \"P42NC\"    \n[13] \"P20STGBSC\" \"P22ST\"    \n\ncolnames(LB2020)  # Inspect column names in LB2020\n\n [1] \"numinves\" \"idenpa\"   \"reg\"      \"ciudad\"   \"tamciud\"  \"edad\"    \n [7] \"sexo\"     \"s1\"       \"s21\"      \"s30\"      \"s16\"      \"p38n\"    \n[13] \"p17stgbs\" \"p18st\"   \n\ncolnames(LB2023)  # Inspect column names in LB2023\n\n [1] \"numinves\" \"idenpa\"   \"reg\"      \"ciudad\"   \"tamciud\"  \"edad\"    \n [7] \"sexo\"     \"S2\"       \"S16\"      \"S24\"      \"S21B\"     \"P32INN\"  \n[13] \"P15STGBS\" \"P16ST\"   \n\n\n\n\nChange variable names\n\ncolnames(LB2018) &lt;- c( \"survey_year\", \"country\", \"reg\", \"city\", \"city_size\", \"age\", \n                \"sex\", \"socialclass_selfAssesment\",\"citizen\", \n                \"socialclass_interviewerAssesment\", \"educ\",\"opinion_immigrants\", \"presi_leading\", \"left_right\")\n\ncolnames(LB2020) &lt;- c(\"survey_year\", \"country\", \"reg\", \"city\", \"city_size\", \"age\", \n                \"sex\",  \"socialclass_selfAssesment\",\"citizen\", \n                \"socialclass_interviewerAssesment\", \"educ\",\"opinion_immigrants\", \"presi_leading\", \"left_right\")\n\ncolnames(LB2023) &lt;- c(\"survey_year\", \"country\", \"reg\", \"city\", \"city_size\", \"age\", \n                \"sex\",  \"socialclass_selfAssesment\",\"citizen\", \n                \"socialclass_interviewerAssesment\", \"educ\",\"opinion_immigrants\", \"presi_leading\", \"left_right\")\n\n\n\nMerging datasets\n\n# Join LB2018 and LB2020\nAll_LB &lt;- LB2018 %&gt;%\n  full_join(LB2020, by = c(\"survey_year\", \"country\", \"reg\", \"city\", \"city_size\", \n                           \"age\", \"sex\", \"socialclass_selfAssesment\", \"citizen\", \n                           \"socialclass_interviewerAssesment\", \"educ\", \"opinion_immigrants\", \"presi_leading\", \"left_right\")) %&gt;%\n  full_join(LB2023, by = c(\"survey_year\", \"country\", \"reg\", \"city\", \"city_size\", \n                           \"age\", \"sex\", \"socialclass_selfAssesment\", \"citizen\", \n                           \"socialclass_interviewerAssesment\", \"educ\", \"opinion_immigrants\", \"presi_leading\", \"left_right\"))\n\nclass(All_LB$survey_year)\n\n[1] \"haven_labelled\" \"vctrs_vctr\"     \"double\"        \n\nclass(All_LB$country)\n\n[1] \"haven_labelled\" \"vctrs_vctr\"     \"double\"        \n\nAll_LB &lt;- All_LB %&gt;%\n  mutate(survey_year = as.numeric(survey_year)) %&gt;%\n  mutate(survey_year = if_else(survey_year == 23, 2023, survey_year)) %&gt;% \n  mutate(country = as.character(country))\n\nclass(All_LB$survey_year)\n\n[1] \"numeric\"\n\nclass(All_LB$country)\n\n[1] \"character\"\n\ncolnames(All_LB)\n\n [1] \"survey_year\"                      \"country\"                         \n [3] \"reg\"                              \"city\"                            \n [5] \"city_size\"                        \"age\"                             \n [7] \"sex\"                              \"socialclass_selfAssesment\"       \n [9] \"citizen\"                          \"socialclass_interviewerAssesment\"\n[11] \"educ\"                             \"opinion_immigrants\"              \n[13] \"presi_leading\"                    \"left_right\"                      \n\n\n\n\nReplacing IDs for country name\n\n# Create a lookup table\ncountry_lookup &lt;- data.frame(\n  code = as.character(c(32, 68, 76, 152, 170, 188, 214, 218, 222, 320, 340, 484, 558, 591, 600, 604, 724, 858, 862)),\n  name = c(\"Argentina\", \"Bolivia\", \"Brazil\", \"Chile\", \"Colombia\", \"Costa Rica\", \"Dominican Republic\", \"Ecuador\",\n           \"El Salvador\", \"Guatemala\", \"Honduras\", \"Mexico\", \"Nicaragua\", \"Panama\", \"Paraguay\", \"Peru\",\n           \"Spain\", \"Uruguay\", \"Venezuela\")\n)\n\n# Join the lookup table\nAll_LB &lt;- All_LB %&gt;%\n  mutate(country = as.character(country)) %&gt;%\n  left_join(country_lookup, by = c(\"country\" = \"code\")) %&gt;%\n  mutate(country = factor(name)) %&gt;%\n  select(-name)  # Optionally remove the lookup colum\n\n# Group by and count countries\nAll_LB %&gt;% \n  group_by(country) %&gt;% \n  count()\n\n# A tibble: 18 × 2\n# Groups:   country [18]\n   country                n\n   &lt;fct&gt;              &lt;int&gt;\n 1 Argentina           3600\n 2 Bolivia             3600\n 3 Brazil              3612\n 4 Chile               3600\n 5 Colombia            3600\n 6 Costa Rica          3000\n 7 Dominican Republic  3000\n 8 Ecuador             3600\n 9 El Salvador         3000\n10 Guatemala           3000\n11 Honduras            3000\n12 Mexico              3600\n13 Nicaragua           2000\n14 Panama              3000\n15 Paraguay            3600\n16 Peru                3600\n17 Uruguay             3600\n18 Venezuela           3601\n\ncolnames(All_LB)\n\n [1] \"survey_year\"                      \"country\"                         \n [3] \"reg\"                              \"city\"                            \n [5] \"city_size\"                        \"age\"                             \n [7] \"sex\"                              \"socialclass_selfAssesment\"       \n [9] \"citizen\"                          \"socialclass_interviewerAssesment\"\n[11] \"educ\"                             \"opinion_immigrants\"              \n[13] \"presi_leading\"                    \"left_right\"                      \n\n\n\n\nEliminating NAs\n\nAll_LB &lt;- All_LB %&gt;%\n  mutate(across(c(presi_leading),\n                ~ ifelse(. &lt; 0 | . &gt; 5, NA, .)))\n\nAll_LB &lt;- All_LB %&gt;%\n  mutate(across(c(opinion_immigrants), \n                ~ ifelse(. &lt; 0 | . &gt; 2, NA, .)))\n\nAll_LB &lt;- All_LB %&gt;%\n  mutate(across(c(age), \n                ~ ifelse(. &lt; 0 | . &gt; 100, NA, .)))\ncolnames(All_LB)\n\n [1] \"País__ESTANDAR\"                   \"survey_year\"                     \n [3] \"tasa_pobreza\"                     \"tasa_ansiedad_desempleo\"         \n [5] \"tasa_medio_desempleo\"             \"tasa_inmigracion_1000\"           \n [7] \"country\"                          \"reg\"                             \n [9] \"city\"                             \"city_size\"                       \n[11] \"age\"                              \"sex\"                             \n[13] \"socialclass_selfAssesment\"        \"citizen\"                         \n[15] \"socialclass_interviewerAssesment\" \"educ\"                            \n[17] \"opinion_immigrants\"               \"presi_leading\"                   \n[19] \"left_right\"                      \n\nAll_LB &lt;- All_LB %&gt;%\n  mutate(across(c(left_right),\n                ~ ifelse(. &lt; 0 | . &gt; 10, NA, .)))\n\nAll_LB &lt;- All_LB %&gt;% \n  filter(citizen == 1)"
  },
  {
    "objectID": "Clustering.html#code-and-plots",
    "href": "Clustering.html#code-and-plots",
    "title": "Clustering",
    "section": "Code and plots",
    "text": "Code and plots\n\n#Heat map \nset.seed(253)\nheatmap(scale(my_artist), Colv = NA, cexRow = 0.3)\n\n\n\n\n\n\n\n\n\n\nbeatles_cluster &lt;- hclust(dist(scale(my_artist)), method = \"complete\")\n\n# Dendrogram\nfviz_dend(\n  beatles_cluster,\n  k = 6,\n  cex = 0.7,\n  k_colors = \"jco\",\n  rect = TRUE,\n  rect_fill = TRUE,\n  rect_border = \"jco\",\n  labels_track_height = 0.8,\n  main = \"Hierarchical Clustering Dendrogram (6 Clusters)\",\n  xlab = \"Songs\",\n  ylab = \"Height\",\n  ggtheme = theme_minimal()\n)\n\n\n\n\n\n\n\n\n\n\ncluster_data &lt;- my_artist %&gt;% \n  mutate(hier_cluster_k = as.factor(cutree(beatles_cluster, k = 6)))\n\ngroupLabelling&lt;- cluster_data %&gt;%\n  group_by(hier_cluster_k)%&gt;%\n  count()\n\nresult &lt;- cluster_data %&gt;%\n  group_by(hier_cluster_k) %&gt;%\n  summarize_all(mean)\n\nlong_result &lt;- result %&gt;%\n  pivot_longer(cols = -hier_cluster_k, names_to = \"variable\", values_to = \"value\")\n\n#Grid Plot \n\nggplot(long_result, aes(x = hier_cluster_k, y = value)) +\n  geom_point(size = 3, alpha = 0.7, color = \"steelblue\") +  # Adjust size and transparency\n  facet_wrap(~variable, scales = \"free_y\", ncol = 3) +      # Arrange facets in 3 columns\n  labs(\n    title = \"Cluster Metrics Across Different Hierarchical Cluster Numbers\",\n    subtitle = \"Each panel represents a metric; points show metric values for each cluster count\",\n    x = \"Number of Clusters (k)\",\n    y = \"Metric Value\"\n  ) +\n  theme_minimal(base_size = 14) +                           # Clean theme with larger font size\n  theme(\n    strip.text = element_text(face = \"bold\"),               # Bold facet titles\n    axis.text.x = element_text(angle = 45, hjust = 1)     # Rotate x-axis labels            \n  )\n\n\n\n\n\n\n\n\n\n#mean and count information \nkable(groupLabelling)\n\n\n\n\nhier_cluster_k\nn\n\n\n\n\n1\n17\n\n\n2\n36\n\n\n3\n3\n\n\n4\n2\n\n\n5\n1\n\n\n6\n2\n\n\n\n\nkable(result)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhier_cluster_k\nduration_ms\ndanceability\nenergy\nkey\nloudness\nmode\nspeechiness\nacousticness\ninstrumentalness\nliveness\nvalence\ntempo\nspotify_popularity\nbillboard_weeks\n\n\n\n\n1\n182667.4\n0.5358824\n0.4556471\n2.764706\n-9.833706\n0.5882353\n0.0335412\n0.4832412\n0.0003789\n0.1941529\n0.6311176\n113.4502\n61.82353\n7.000000\n\n\n2\n154039.7\n0.5421667\n0.7010833\n4.194444\n-7.675667\n0.9722222\n0.0408556\n0.2931006\n0.0102646\n0.1854000\n0.8209167\n121.2220\n59.50000\n9.527778\n\n\n3\n308333.0\n0.4130000\n0.5936667\n9.000000\n-8.017333\n1.0000000\n0.0281667\n0.0392667\n0.0109379\n0.1626667\n0.4800000\n155.8663\n60.00000\n12.333333\n\n\n4\n149600.0\n0.5810000\n0.5635000\n6.000000\n-7.092000\n1.0000000\n0.0338500\n0.4627900\n0.0057026\n0.3645000\n0.8145000\n127.0055\n1.50000\n7.500000\n\n\n5\n181320.0\n0.2340000\n0.6930000\n0.000000\n-8.277000\n1.0000000\n0.0408000\n0.0000282\n0.8990000\n0.4420000\n0.5410000\n106.9330\n51.00000\n7.000000\n\n\n6\n226306.5\n0.3985000\n0.6680000\n8.000000\n-10.750500\n1.0000000\n0.1930000\n0.2047000\n0.0001740\n0.1561500\n0.4995000\n109.6255\n70.00000\n10.000000"
  },
  {
    "objectID": "Clustering.html#write-up",
    "href": "Clustering.html#write-up",
    "title": "Clustering",
    "section": "Write-up",
    "text": "Write-up\nFrom the UWC Event playlist :\n\nFor PC1, the strongest positively correlated features are energy, valence and loudness. These are negatively correlated with duration_ms. Given the definitions of these features: Energy - represents a perceptual measure of intensity and activity Valence - describes the musical positiveness conveyed by a track. Loudness - The overall loudness of a track in decibels (dB). Duration_ms - The duration of the track in milliseconds. It makes sense that loud, high energy and positive music would fall into a similar category. Based on PC1, these songs are likely to be on the shorter side.\nFor PC2, danceability and acousticness have the strongest positive correlation, even though they are negatively correlated with the other features. Danceability is how “suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity”. There is a wide range of genres that are categorized as commonly danceable. On the other hand, acousticness is defined as “A confidence measure from 0.0 to 1.0 of whether the track is acoustic’’, which could be broken down further into “(of popular music or musical instruments) not having electrical amplification”. Therefore, it refers mostly to songs commonly associated with ballads, or slow. Initially, using these two definitions, we observed that the genre they fall in are vastly different and therefore we would not have predicted that they would be correlated. However, after talking as a team we realized that ballads (for example, Ed Sheeran songs) are usually used in spaces like weddings, and they may be more commonly danced to in western societies. From here we reflected that our contexts strongly impact what we understand as danceable or acoustic. In order to evaluate this, we explored the developer site from Spotify (https://developer.spotify.com/documentation/web-api/reference/get-audio-features), where they described how the values of these features are produced using human-trained algorithms. Coming back to our point about context and bias informing our understanding of these features, these values are highly subjective and make it really hard to have reliable predictions of how a song may sound or its characteristics.\nIf we wanted to retain at least 80% of the information in the original features of our dataset, we would need to keep around 8 PCs. Based on the graphs of cumulative percentage variance explained by our model, they begin to plateau at around this cut off which justifies this value. Because the songs from The Beatles are very similar across the board, more PCs (8) are needed to keep most of the variation.\nDefinition of audio features: https://developer.spotify.com/documentation/web-api/reference/get-audio-features"
  },
  {
    "objectID": "Clustering.html#code-and-plots-1",
    "href": "Clustering.html#code-and-plots-1",
    "title": "Clustering",
    "section": "Code and plots",
    "text": "Code and plots\n\n#PCA training\npca_my_artist &lt;- prcomp(my_artist, scale = TRUE, center = TRUE)\n\nkable(pca_my_artist %&gt;% \n  pluck(\"rotation\")%&gt;%\n  head(3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPC1\nPC2\nPC3\nPC4\nPC5\nPC6\nPC7\nPC8\nPC9\nPC10\nPC11\nPC12\nPC13\nPC14\n\n\n\n\nduration_ms\n-0.3572387\n0.2676061\n-0.0119590\n-0.1556229\n0.2004203\n0.2119141\n-0.1730681\n0.5240150\n-0.3786302\n0.1906680\n-0.2557595\n-0.2877804\n-0.2330513\n0.0672855\n\n\ndanceability\n0.1800042\n-0.4302920\n-0.1323784\n-0.2805384\n0.0393966\n0.1429120\n0.1609638\n-0.0815642\n0.3135827\n0.3175491\n-0.5930300\n-0.2775929\n0.0115264\n-0.0603044\n\n\nenergy\n0.5171017\n0.3435514\n0.0233856\n-0.0523940\n0.0336113\n-0.1276263\n-0.0281332\n0.1197125\n-0.1451313\n0.2489187\n0.0350246\n-0.0670592\n0.1234186\n-0.6890327\n\n\n\n\n\nThis creates 3 PCs which are each different combinations of the (standardized) original features:\n\n# Plot loadings for first \"k\" PCs (you pick k)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(viridis)\nlibrary(dplyr)\n\n# Melt and enhance the first plot\nmelt(pca_my_artist$rotation[, 1:3]) %&gt;%\n  mutate(Var1 = factor(Var1, levels = unique(Var1))) %&gt;%  # Ensure consistent ordering\n  ggplot(aes(x = reorder_within(Var1, abs(value), Var2), y = value, fill = Var1)) +\n  geom_bar(stat = \"identity\") +\n  facet_wrap(~ Var2, scales = \"free_x\", nrow = 1) +  # Free x-axis for clarity\n  labs(\n    y = \"Loadings\",\n    x = \"Original Features (Sorted by Loading)\",\n    fill = \"Original Features\",\n    title = \"PCA Loadings Across Principal Components\"\n  ) +\n  scale_fill_viridis_d(option = \"C\", end = 0.85) +  # Viridis palette\n  theme_minimal(base_size = 14) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels\n    panel.grid.major.x = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nmelt(pca_my_artist$rotation) %&gt;%\n  filter(Var2 == \"PC1\") %&gt;%\n  arrange(desc(abs(value))) %&gt;%  # Sort by absolute loading values\n  ggplot(aes(x = reorder(Var1, value), y = value, fill = Var1)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  labs(\n    y = \"Loadings\",\n    x = \"Original Features (Sorted by Loading)\",\n    fill = \"Original Features\",\n    title = \"PCA Loadings for the First Principal Component (PC1)\"\n  ) +\n  scale_fill_viridis_d(option = \"D\", end = 0.85) +  # Different palette for variation\n  theme_minimal(base_size = 14) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels\n    panel.grid.major.x = element_blank()\n  )\n\n\n\n\n\n\n\n\n# Loadings plot for first 2 PCs\nlibrary(factoextra)\nfviz_pca_var(pca_my_artist, repel = TRUE)\n\n\n\n\n\n\n\n\n\n# Numerical summaries: Measure information captured by each PC\nkable(pca_my_artist %&gt;% \n  tidy(matrix = \"eigenvalues\"))\n\n\n\n\nPC\nstd.dev\npercent\ncumulative\n\n\n\n\n1\n1.4920005\n0.15900\n0.15900\n\n\n2\n1.4557057\n0.15136\n0.31037\n\n\n3\n1.3252051\n0.12544\n0.43581\n\n\n4\n1.1918654\n0.10147\n0.53728\n\n\n5\n1.1026577\n0.08685\n0.62412\n\n\n6\n1.0071287\n0.07245\n0.69657\n\n\n7\n0.9035524\n0.05831\n0.75489\n\n\n8\n0.8520781\n0.05186\n0.80675\n\n\n9\n0.8418748\n0.05063\n0.85737\n\n\n10\n0.7816690\n0.04364\n0.90102\n\n\n11\n0.7102810\n0.03604\n0.93705\n\n\n12\n0.6751436\n0.03256\n0.96961\n\n\n13\n0.5452178\n0.02123\n0.99084\n\n\n14\n0.3580464\n0.00916\n1.00000\n\n\n\n\n\n# Graphical summary 1: SCREE PLOT\n# Plot % of variance explained by each PC\npca_my_artist %&gt;% \n  tidy(matrix = \"eigenvalues\") %&gt;% \n  ggplot(aes(y = percent, x = PC)) + \n    geom_point(size = 2) + \n    geom_line() + \n    labs(y = \"% of variance explained\")\n\n\n\n\n\n\n\n\n# Graphical summary 2: Plot cumulative % of variance explained by each PC\npca_my_artist %&gt;% \n  tidy(matrix = \"eigenvalues\") %&gt;% \n  rbind(0) %&gt;% \n  ggplot(aes(y = cumulative, x = PC)) + \n    geom_point(size = 2) + \n    geom_line() + \n    labs(y = \"CUMULATIVE % of variance explained\")\n\n\n\n\n\n\n\n\n\n# Numerical summary: check out the scores\nkable(pca_my_artist %&gt;% \n  pluck(\"x\")%&gt;%\n  head(3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPC1\nPC2\nPC3\nPC4\nPC5\nPC6\nPC7\nPC8\nPC9\nPC10\nPC11\nPC12\nPC13\nPC14\n\n\n\n\n4 - By The Beatles\n-1.8042126\n-1.2906615\n1.4463042\n-0.3495734\n0.5324882\n0.3704530\n-1.9768520\n1.1223699\n-1.3063825\n1.3643170\n-0.0953481\n-0.4575064\n0.1506008\n-0.0380216\n\n\nA Hard Day’s Night\n1.4815185\n0.6139433\n-0.6972934\n1.1477033\n0.4729184\n0.4103870\n0.4978435\n0.1164981\n0.2390878\n1.1808804\n-0.4848780\n0.3174936\n0.4886280\n0.1611694\n\n\nAct Naturally\n0.0492534\n-1.8190254\n-0.0681105\n-1.5897745\n-0.0754567\n0.2688175\n-0.3957296\n-0.4498894\n0.7999766\n0.5355673\n0.3832879\n-0.5093342\n-0.4917648\n0.5692066\n\n\n\n\n\n\n# Graphical summary: Score plot\n# Plot PC1 scores (x-axis) vs PC2 scores (y-axis) of all data points\nfviz_pca_ind(pca_my_artist, repel = TRUE)"
  },
  {
    "objectID": "DiD/DiD_ColombiaVenezuela.html",
    "href": "DiD/DiD_ColombiaVenezuela.html",
    "title": "DiD_ColombiaVenezuela",
    "section": "",
    "text": "tttttttttt # Data Preparation"
  },
  {
    "objectID": "DiD/DiD_ColombiaVenezuela.html#loading-latinobarometro-data",
    "href": "DiD/DiD_ColombiaVenezuela.html#loading-latinobarometro-data",
    "title": "DiD_ColombiaVenezuela",
    "section": "Loading Latinobarometro Data",
    "text": "Loading Latinobarometro Data\n\n### Laoding 2020 and 2023 .rdata datasets\n\nload(\"data/Latinobarometro_2020_Eng_Rdata_v1_0.rdata\")\n\nload(\"data/Latinobarometro_2023_Eng_Rdata_v1_0.rdata\")\n\n\nLoading 2018 .dta data set\n\nLB2018 &lt;- read_dta(\"data/Latinobarometro_2018_Esp_Stata_v20190303.dta\")"
  },
  {
    "objectID": "DiD/DiD_ColombiaVenezuela.html#select-varibles-of-interest",
    "href": "DiD/DiD_ColombiaVenezuela.html#select-varibles-of-interest",
    "title": "DiD_ColombiaVenezuela",
    "section": "Select Varibles of interest",
    "text": "Select Varibles of interest\n\nLB2018 &lt;- LB2018 %&gt;% \n  select(\"NUMINVES\", \"IDENPA\", \"REG\", \"CIUDAD\", \"TAMCIUD\", \n  \"EDAD\", \"SEXO\", \"S1\", \"S16\", \"S26\", \"S10\", \"P42NC\", \"P20STGBSC\", \"P22ST\")\nLB2020 &lt;- Latinobarometro_2020_Eng %&gt;%\n  select(\"numinves\", \"idenpa\", \"reg\", \"ciudad\", \"tamciud\", \n  \"edad\", \"sexo\", \"s1\", \"s21\", \"s30\", \"s16\", \"p38n\", \"p17stgbs\", \"p18st\") \nLB2023 &lt;- Latinobarometro_2023_Eng_v1_0 %&gt;%\n  select(\"numinves\", \"idenpa\", \"reg\", \"ciudad\", \"tamciud\", \n  \"edad\", \"sexo\", \"S2\", \"S16\", \"S24\", \"S21B\", \"P32INN\", \"P15STGBS\", \"P16ST\")\n\n\nCheck the columns\n\n# Check column names in each dataset\ncolnames(LB2018)  # Inspect column names in LB2018\n\n [1] \"NUMINVES\"  \"IDENPA\"    \"REG\"       \"CIUDAD\"    \"TAMCIUD\"   \"EDAD\"     \n [7] \"SEXO\"      \"S1\"        \"S16\"       \"S26\"       \"S10\"       \"P42NC\"    \n[13] \"P20STGBSC\" \"P22ST\"    \n\ncolnames(LB2020)  # Inspect column names in LB2020\n\n [1] \"numinves\" \"idenpa\"   \"reg\"      \"ciudad\"   \"tamciud\"  \"edad\"    \n [7] \"sexo\"     \"s1\"       \"s21\"      \"s30\"      \"s16\"      \"p38n\"    \n[13] \"p17stgbs\" \"p18st\"   \n\ncolnames(LB2023)  # Inspect column names in LB2023\n\n [1] \"numinves\" \"idenpa\"   \"reg\"      \"ciudad\"   \"tamciud\"  \"edad\"    \n [7] \"sexo\"     \"S2\"       \"S16\"      \"S24\"      \"S21B\"     \"P32INN\"  \n[13] \"P15STGBS\" \"P16ST\"   \n\n\n\n\nChange variable names\n\ncolnames(LB2018) &lt;- c( \"survey_year\", \"country\", \"reg\", \"city\", \"city_size\", \"age\", \n                \"sex\", \"socialclass_selfAssesment\",\"citizen\", \n                \"socialclass_interviewerAssesment\", \"educ\",\"opinion_immigrants\", \"presi_leading\", \"left_right\")\n\ncolnames(LB2020) &lt;- c(\"survey_year\", \"country\", \"reg\", \"city\", \"city_size\", \"age\", \n                \"sex\",  \"socialclass_selfAssesment\",\"citizen\", \n                \"socialclass_interviewerAssesment\", \"educ\",\"opinion_immigrants\", \"presi_leading\", \"left_right\")\n\ncolnames(LB2023) &lt;- c(\"survey_year\", \"country\", \"reg\", \"city\", \"city_size\", \"age\", \n                \"sex\",  \"socialclass_selfAssesment\",\"citizen\", \n                \"socialclass_interviewerAssesment\", \"educ\",\"opinion_immigrants\", \"presi_leading\", \"left_right\")"
  },
  {
    "objectID": "Content_Summary.html",
    "href": "Content_Summary.html",
    "title": "GWAS Simulation: Microbial Methane Production",
    "section": "",
    "text": "Genome-Wide Association Studies (GWAS) help identify genetic variants linked to traits. In this case, we’ll explore methane production in microbes by simulating genetic data.\n\n\n\nGenetic variation: Most of the DNA from organisms of the same species is identical, however the parts where the DNA sequences differ are called genetic variants oe SNP.\n\n\nSociety for Mucosal Immunology\n\nGenotype: The specific DNA sequence of an individual, can refer to alleles or variants.\nAllele: One of two or more alternative forms of a gene.\n\nHomozygous: Same allele\nHeterozygus: Different alleles\n\nPhenotype: The trait represented as a result of the genotype.\n\nFrom the introduction\n\n\n\n\\[E[\\mathbf{y} \\mid \\mathbf{X}] =\\boldsymbol\\beta_0 + \\boldsymbol\\beta_1 \\mathbf{X}\\]\nwhere:\ny is the trait\nX is the number of minor alleles\n\n\n\n\n\n\nNote\n\n\n\nFun fact: Microbial Genome Associated Studies are often refer to mGWAS in the literature!\nFor the microbe nerds, this GWAS simulation will not fulfill all our current understanding of prokaryotic DNA and/or the most appropaite data for bacterial DNA. I will be using methods used on human GWAS. However, I wanted to share how bacterial DNA differs from human DNA:\n\n\nHumans have diploid genomes (two copies of each chromosome, so SNPs are 0, 1, or 2 based on allele copies). Bacteria are haploid (one circular chromosome), so they only have one allele per locus (0 or 1).\n\n\n\nIn bacteria, a SNP is typically a single base change in a conserved region of the genome (A → G, C → T, etc.). Instead of 0, 1, 2 (homozygous reference, heterozygous, homozygous alternative) like in humans, bacterial SNPs are usually binary (present or absent at a given site).\n\n\n\nBacteria can share genetic material through processes like conjugation, transformation, and transduction. This means that SNPs may spread across different bacterial strains in ways that are different from human inheritance.\n\n\n\nBecause bacteria reproduce asexually (clonal reproduction), SNPs are often highly linked and don’t shuffle in the same way as in sexually reproducing species.\n\\\nScientist working on mGWAS, reference human GWAS heavily. \\ In the paper, Microbial genome-wide association studies: lessons from human GWAS (2016), they summarized some of the advancement for the time: \\ - With more microbe genomes available, scientists can now use GWAS to study things like antibiotic resistance and how diseases spread. \\ - Microbe populations are tricky to study due to their diversity and complex genetics, so better tools are needed to make progress. \\ - Combining data from both host and microbe genomes could reveal how they interact, opening up exciting new research areas. \\ &gt;Power, R., Parkhill, J. & de Oliveira, T. Microbial genome-wide association studies: lessons from human GWAS. Nat Rev Genet 18, 41–50 (2017). https://doi.org/10.1038/nrg.2016.132 \\ Most of the literature that I found covered mGWAS throught the lens of public health microbiology."
  },
  {
    "objectID": "Content_Summary.html#intro-to-genome-wide-association-studies",
    "href": "Content_Summary.html#intro-to-genome-wide-association-studies",
    "title": "GWAS Simulation: Microbial Methane Production",
    "section": "",
    "text": "Genome-Wide Association Studies (GWAS) help identify genetic variants linked to traits. In this case, we’ll explore methane production in microbes by simulating genetic data.\n\n\n\nGenetic variation: Most of the DNA from organisms of the same species is identical, however the parts where the DNA sequences differ are called genetic variants oe SNP.\n\n\nSociety for Mucosal Immunology\n\nGenotype: The specific DNA sequence of an individual, can refer to alleles or variants.\nAllele: One of two or more alternative forms of a gene.\n\nHomozygous: Same allele\nHeterozygus: Different alleles\n\nPhenotype: The trait represented as a result of the genotype.\n\nFrom the introduction\n\n\n\n\\[E[\\mathbf{y} \\mid \\mathbf{X}] =\\boldsymbol\\beta_0 + \\boldsymbol\\beta_1 \\mathbf{X}\\]\nwhere:\ny is the trait\nX is the number of minor alleles\n\n\n\n\n\n\nNote\n\n\n\nFun fact: Microbial Genome Associated Studies are often refer to mGWAS in the literature!\nFor the microbe nerds, this GWAS simulation will not fulfill all our current understanding of prokaryotic DNA and/or the most appropaite data for bacterial DNA. I will be using methods used on human GWAS. However, I wanted to share how bacterial DNA differs from human DNA:\n\n\nHumans have diploid genomes (two copies of each chromosome, so SNPs are 0, 1, or 2 based on allele copies). Bacteria are haploid (one circular chromosome), so they only have one allele per locus (0 or 1).\n\n\n\nIn bacteria, a SNP is typically a single base change in a conserved region of the genome (A → G, C → T, etc.). Instead of 0, 1, 2 (homozygous reference, heterozygous, homozygous alternative) like in humans, bacterial SNPs are usually binary (present or absent at a given site).\n\n\n\nBacteria can share genetic material through processes like conjugation, transformation, and transduction. This means that SNPs may spread across different bacterial strains in ways that are different from human inheritance.\n\n\n\nBecause bacteria reproduce asexually (clonal reproduction), SNPs are often highly linked and don’t shuffle in the same way as in sexually reproducing species.\n\\\nScientist working on mGWAS, reference human GWAS heavily. \\ In the paper, Microbial genome-wide association studies: lessons from human GWAS (2016), they summarized some of the advancement for the time: \\ - With more microbe genomes available, scientists can now use GWAS to study things like antibiotic resistance and how diseases spread. \\ - Microbe populations are tricky to study due to their diversity and complex genetics, so better tools are needed to make progress. \\ - Combining data from both host and microbe genomes could reveal how they interact, opening up exciting new research areas. \\ &gt;Power, R., Parkhill, J. & de Oliveira, T. Microbial genome-wide association studies: lessons from human GWAS. Nat Rev Genet 18, 41–50 (2017). https://doi.org/10.1038/nrg.2016.132 \\ Most of the literature that I found covered mGWAS throught the lens of public health microbiology."
  },
  {
    "objectID": "Content_Summary.html#simulating-microbial-data",
    "href": "Content_Summary.html#simulating-microbial-data",
    "title": "GWAS Simulation: Microbial Methane Production",
    "section": "🦠 Simulating Microbial Data 🦠",
    "text": "🦠 Simulating Microbial Data 🦠\nWe will generate:\n\n\n1000 microbes with random SNPs (0, 1, 2 copies of a minor allele).\n\nA binary “High Methane Producer” trait influenced by a SNP.\n\n\nn &lt;- 1000   # number of microbes\nnum_snps &lt;- 5  # number of SNPs\n\n# Function to generate SNPs based on minor allele frequency\n\ngenerate_snp_maf &lt;- function(n, maf, major = \"A\", minor = \"G\") {\n  allele1 &lt;- ifelse(runif(n) &lt; maf, minor, major)   # generate first allele (major/minor based on MAF) \n  allele2 &lt;- ifelse(runif(n) &lt; maf, minor, major) #  # generate second allele independently\n  paste0(allele1, \"/\", allele2)   # genotype in \n}\n\n# minor allele frequencies\nmaf_values &lt;- c(0.6, 0.8, 0.2, 0.4, 0.1)  \n\n# create SNP dataset with MAF????\nsnp_data &lt;- data.frame(\n  ID = 1:n,\n  SNP1 = generate_snp_maf(n, maf_values[1], \"A\", \"G\"),\n  SNP2 = generate_snp_maf(n, maf_values[2], \"C\", \"T\"),\n  SNP3 = generate_snp_maf(n, maf_values[3], \"G\", \"A\"),\n  SNP4 = generate_snp_maf(n, maf_values[4], \"T\", \"C\"),\n  SNP5 = generate_snp_maf(n, maf_values[5], \"A\", \"G\")\n)\n\n# View first few rows\nhead(snp_data)\n\n  ID SNP1 SNP2 SNP3 SNP4 SNP5\n1  1  A/A  T/T  G/G  C/C  A/A\n2  2  G/A  C/C  G/G  C/C  A/A\n3  3  A/G  T/T  A/G  C/T  A/A\n4  4  G/A  T/T  G/G  C/T  A/A\n5  5  A/A  T/T  A/G  T/C  A/A\n6  6  A/A  T/C  G/A  T/T  A/A\n\n\n\nWhy do we have two letters in each SNP in Human Genome?\nHumans are diploid organisms, meaning we inherit one copy of each chromosome from our mother and one from our father, resulting in two alleles."
  },
  {
    "objectID": "Content_Summary.html#converting-snps-to-numeric-genotypes-0-1-2-.",
    "href": "Content_Summary.html#converting-snps-to-numeric-genotypes-0-1-2-.",
    "title": "GWAS Simulation: Microbial Methane Production",
    "section": "📌 Converting SNPs to Numeric Genotypes (0, 1, 2) 📌.",
    "text": "📌 Converting SNPs to Numeric Genotypes (0, 1, 2) 📌.\nTo analyze GWAS data, we count the number of minor alleles per individual. In this example, we will be determining which is the minor allele in this population of microbes.\n\n# SNPs from bases to numbers based on the minor allele numerically\nconvert_to_numeric &lt;- function(snp, minor_allele) {\n  sapply(snp, function(x) sum(unlist(strsplit(x, \"/\")) == minor_allele)) # count occurrences of the minor allele\n}\n\n# determining minor allele in each SNP and assigning it to \nsnp_numeric &lt;- snp_data %&gt;%\n  mutate(\n    SNP1_numeric = convert_to_numeric(SNP1, \"G\"),\n    SNP2_numeric = convert_to_numeric(SNP2, \"T\"),\n    SNP3_numeric = convert_to_numeric(SNP3, \"A\"),\n    SNP4_numeric = convert_to_numeric(SNP4, \"C\"),\n    SNP5_numeric = convert_to_numeric(SNP5, \"G\")\n  ) %&gt;%\n  select(ID, ends_with(\"_numeric\"))  \nhead(snp_numeric)\n\n  ID SNP1_numeric SNP2_numeric SNP3_numeric SNP4_numeric SNP5_numeric\n1  1            0            2            0            2            0\n2  2            1            0            0            2            0\n3  3            1            2            1            1            0\n4  4            1            2            0            1            0\n5  5            0            2            1            1            0\n6  6            0            1            1            0            0\n\n\n\n#determining SNP associated with trait\nn &lt;- nrow(snp_numeric) # calculate the number of individuals \ny &lt;- 3 * snp_numeric[,'SNP2_numeric'] + rnorm(n, 0, 1) # y = 2 * x + e\n\n# look at the first few simulated trait values\nhead(y)\n\n       T/T        C/C        T/T        T/T        T/T        T/C \n 6.2809732 -0.2473763  6.5676564  5.8578841  6.6627146  4.9142788"
  },
  {
    "objectID": "Content_Summary.html#part-4-quality-control",
    "href": "Content_Summary.html#part-4-quality-control",
    "title": "GWAS Simulation: Microbial Methane Production",
    "section": "🧮 Part 4: Quality Control 🧮",
    "text": "🧮 Part 4: Quality Control 🧮\nWe’re not going to be able to detect an association between our trait and any of the SNPs that have a MAF of zero (also known as monomorphic SNPs).\nIn our case, we stablished the MAFs all to be above O. Therefore we do not need to perform this quality control step."
  },
  {
    "objectID": "Content_Summary.html#part-5-gwas-analysis",
    "href": "Content_Summary.html#part-5-gwas-analysis",
    "title": "GWAS Simulation: Microbial Methane Production",
    "section": "🧬 Part 5: GWAS Analysis 🧬",
    "text": "🧬 Part 5: GWAS Analysis 🧬\nNow that we have numerical genotypes and a simulated trait, we can run a genome-wide association study (GWAS) to test which SNPs are associated with methane production.\n\n1️⃣ Running Logistic Regression GWAS\nWe’ll use logistic regression to test whether each SNP is significantly associated with the high methane producer trait.\n\n# y to a binary trait (1 = high methane producer, 0 = low)\ny_binary &lt;- as.numeric(y &gt; median(y))  # Median split to define high/low producers\n\n#  logistic regression for each SNP\nrun_gwas &lt;- function(snp_col) {\n  model &lt;- glm(y_binary ~ snp_numeric[[snp_col]], family = binomial) # Logistic regression\n  tidy(model) %&gt;% filter(term != \"(Intercept)\")  # Extract SNP results (skip intercept)\n}\n\ngwas_results &lt;- map_dfr(names(snp_numeric)[-1], run_gwas, .id = \"SNP\") \n\ngwas_results\n\n# A tibble: 5 × 6\n  SNP   term                   estimate std.error statistic  p.value\n  &lt;chr&gt; &lt;chr&gt;                     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 1     snp_numeric[[snp_col]]   0.0671    0.0916     0.732 4.64e- 1\n2 2     snp_numeric[[snp_col]]   5.03      0.371     13.6   6.56e-42\n3 3     snp_numeric[[snp_col]]  -0.168     0.112     -1.50  1.33e- 1\n4 4     snp_numeric[[snp_col]]   0.105     0.0901     1.17  2.42e- 1\n5 5     snp_numeric[[snp_col]]   0.0308    0.143      0.215 8.30e- 1\n\n\n\n\n2️⃣ Adjusting for Multiple Testing (Bonferroni)\nBecause we are testing multiple SNPs, we need to adjust our p-values to reduce false positives.\n\nBonferroni Connection\nThe significance level is the probability that a given test will incorrectly find a difference in the sample that is not present in the population (false positive).\n\\[\nBonferroni\\ Corrected\\ p-value\\ =\\dfrac{\\alpha}{n}\n\\] where:\n\\[\\alpha\\] is the original p-value \\[n\\] is the number of tests\n\n# Bonferroni correction\ngwas_results &lt;- gwas_results %&gt;%\n  mutate(p_adj = p.value * nrow(gwas_results)) \n\ngwas_results %&gt;% \n  arrange(p.value)\n\n# A tibble: 5 × 7\n  SNP   term                   estimate std.error statistic  p.value    p_adj\n  &lt;chr&gt; &lt;chr&gt;                     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 2     snp_numeric[[snp_col]]   5.03      0.371     13.6   6.56e-42 3.28e-41\n2 3     snp_numeric[[snp_col]]  -0.168     0.112     -1.50  1.33e- 1 6.64e- 1\n3 4     snp_numeric[[snp_col]]   0.105     0.0901     1.17  2.42e- 1 1.21e+ 0\n4 1     snp_numeric[[snp_col]]   0.0671    0.0916     0.732 4.64e- 1 2.32e+ 0\n5 5     snp_numeric[[snp_col]]   0.0308    0.143      0.215 8.30e- 1 4.15e+ 0\n\n\n\n\n\n3️⃣ Visualizing GWAS Results\nWe’ll use a Manhattan plot to visualize SNP associations and a QQ plot to check for inflation of p-values.\n\n# prepare for graphing the Manhattan plot\ngwas_plot_data &lt;- gwas_results %&gt;%\n  mutate(SNP_num = row_number()) \ngwas_plot_data &lt;- gwas_plot_data %&gt;% \n  mutate(log_Pvalue = log(p.value))\n\n\nggplot(gwas_plot_data, aes(x= SNP_num, y= -log_Pvalue))+\n  geom_point()\n\n\n\n\n\n\n\n# QQ plot \nqqman::qq(gwas_results$p.value, main = \"QQ Plot of GWAS p-values\")\n\n\n\n\n\n\n\n\nSince we are only working with 5 SNP, our Manhattan plot looks pretty sad. Each SNP belong to a specific location."
  },
  {
    "objectID": "LDA_thematic_analysis/Report.html#methodolody",
    "href": "LDA_thematic_analysis/Report.html#methodolody",
    "title": "Venezuela-Colombia Relations through the News: A Topic Modeling Analysis",
    "section": "Methodolody",
    "text": "Methodolody\n\nData Collection and Pre-processing\n\nData Extraction: Articles were extracted from PDF files using pdftools and other relevant libraries to create a text extraction function.\nText Cleaning: Text was cleaned by removing stop words, punctuation, and special characters.\nTokenization: Text was tokenized into individual words.\nLemmatization: Words were lemmatized to their root forms using a Spanish lemmatizer.\nTF-IDF: To reduce noise from frequently occurring words that do not convey important information, we applied the TF-IDF statistic, which adjusts word importance by down-weighting common terms and emphasizing less frequent but significant ones. Thus,words with a TF-IDF score below 0.01 were removed from the corpus to improve topic coherence.\n\n\n\nTopic Modeling\n\nDocument-Term Matrix (DTM): A Document-Term Matrix (DTM) was created to represent the occurrence of words in each document. The DTM is a matrix where rows represent documents and columns represent unique words from the corpus.\nOptimal Number of Topics: We used model fitness scores to validate the optimal number of topics for LDA. Specifically, the FindTopicNumber() function from the ldatuning package was applied. Using a DTM, this function allows for the input of multiple values for the number of topics (k) and calculates four different model fitness scores simultaneously: Griffiths2004, Deveaud2014, CaoJuan2009, and Arun2010. The use of multiple fitness scores provided a comprehensive approach to determining the optimal number of topics for the LDA model.\n\n\nGriffiths2004: Aims to identify coherence.\nDeveaud2014: Reflects interpretability.\nCaoJuan2009: Measures distinctiveness.\nArun2010: Analyzes topic separation.\n\n\n\n\nFigure 2: Line Graphs Showing Four Model Fitness Scores of k Topics\n\n\nBased on the fitness score analysis we decided on 6 topic as the optimal parameter our LDA model.\n\nLDA Model: Latent Dirichlet Allocation (LDA) is a probabilistic model that uncovers hidden topics within a corpus by analyzing patterns of word co-occurrence.\n\nBayesian Inference:\nLDA employs Bayesian statistics to infer the hidden structure of the text. It estimates the probability distributions of topics and words based on the observed documents.\nGenerative Model:\nLDA assumes that:\n\nEach document is a mixture of multiple topics.\n\nEach topic is represented as a probability distribution over a set of words.\nUsing Bayesian inference, LDA works backward from the observed words to:\n\nIdentify the most probable topics for each document.\n\nDetermine the most representative words for each topic.\n\n\nArticle Classification:Each newspaper article was categorized based on its topic-document affiliation, determined by Gamma Values derived from the LDA model.\n\nGamma Value:\nGamma values represent the degree of association between a document and each topic. See the sample distribution of gamma values below:\n\n\n\nFigure 3: Gamma Values Distribution and Average Threshold\n\n\nAssignment Criteria:\n\nEach document was assigned to the topic with the highest gamma value.\n\nTo ensure data quality and relevance, documents with ambiguous affiliations (i.e., gamma values below the average threshold) were excluded from the analysis.\n\n\nTopic Interpretation and Refinement: After identifying the latent topics, in consultation with Prof. Busse-Cárdenas, additional analysis was performed to ensure that meaningful themes emerged from the model. The identified topics were interpreted by examining the 20 most frequent words associated with each topic in addition to the top 10 most relevant articles headlines for each topic.\nTime-Series Analysis: To observe how the prominence of different topics evolved over time, a time-series analysis was conducted. This involved tracking the load of topics across different time periods, based on the frequency with which words associated with each topic appeared in the articles. Each document was assigned to the topic with the highest probability gamma value and the number and percentage of articles corresponding to each topic were tracked annually. This approach, similar to methods used by Roh and Yang (2019), helped identify shifts in public discourse and main traditional media channels representation over time, especially in relation to key political, economic, and migration-related events.\nInter-Topic Analysis: After identifying a number of topics from the entire corpus, we selected the topic that we identified as migration and replicated the methodology described above to dive into more specific areas withing this theme."
  },
  {
    "objectID": "LDA_thematic_analysis/Report.html#results-and-discussion",
    "href": "LDA_thematic_analysis/Report.html#results-and-discussion",
    "title": "Venezuela-Colombia Relations through the News: A Topic Modeling Analysis",
    "section": "Results and Discussion",
    "text": "Results and Discussion\nTopic Identification and Interpretation:\n\nTop Terms and Themes:\nThe following table shows the finalized list of topic names and some examples of words that belong to each specific topic.\n\n\n\n\nTop 5 Words per Topic\n\n\nTopic Name\nbeta\nTerm\n\n\n\n\nColombia-Venezuela Diplomacy\n0.0174835\npresidente\n\n\nColombia-Venezuela Diplomacy\n0.0146663\npetro\n\n\nColombia-Venezuela Diplomacy\n0.0145863\ngobierno\n\n\nColombia-Venezuela Diplomacy\n0.0102007\ncolombia\n\n\nColombia-Venezuela Diplomacy\n0.0069552\nmaduro\n\n\nEnvironmental Degradation\n0.0127928\ncolombia\n\n\nEnvironmental Degradation\n0.0083346\npaíses\n\n\nEnvironmental Degradation\n0.0081055\npaís\n\n\nEnvironmental Degradation\n0.0071971\nciento\n\n\nEnvironmental Degradation\n0.0063134\naños\n\n\nGuerrilla\n0.0090287\neln\n\n\nGuerrilla\n0.0073735\nfiscalía\n\n\nGuerrilla\n0.0073563\ncolombia\n\n\nGuerrilla\n0.0070020\npaz\n\n\nGuerrilla\n0.0059495\ncaso\n\n\nMigration\n0.0147271\npersona\n\n\nMigration\n0.0126366\ncolombia\n\n\nMigration\n0.0120544\nmigrantes\n\n\nMigration\n0.0104329\npaís\n\n\nMigration\n0.0074064\nvenezolanos\n\n\nSoccer\n0.0171755\ncolombia\n\n\nSoccer\n0.0077827\naños\n\n\nSoccer\n0.0068918\ntiempo\n\n\nSoccer\n0.0053206\namérica\n\n\nSoccer\n0.0051917\ngrupo\n\n\nVenezuelan Politics\n0.0203671\nmaduro\n\n\nVenezuelan Politics\n0.0101146\nunidos\n\n\nVenezuelan Politics\n0.0090333\ncolombia\n\n\nVenezuelan Politics\n0.0089209\npaís\n\n\nVenezuelan Politics\n0.0088790\nvenezolano\n\n\n\n\n\n\n\n\nInter-Topic Distance: The relationships between topics were visualized using an inter-topic distance map.\n\n\n\n\nFigure 4: Inter-Topic Distance Map\n\n\nIn the previous plot, we established the lambda value to be in a 0.5, as it provides the best balance between word frequency in the overall corpus, and it’s relevance in the selected topic. However, the toggle is useful to explore the two ends of relevance per given topic.\nThe amount of topics, and the seed used in this LDA model showed no overlap between any of our topics. The topics with the largest percentage of marginal topic distribution are 1 (Colombia-Venezuela Diplomacy) and 2 (Environmental Degradation). Conversely, Topic 6 (Venezuela Politics) has the smallest distribution. In other iterations of LDA’s for our data, we observed that topics overlapped more often when they had a larger marginal topic distributions.\nDocument-Level Analysis:\n\nTop Representative Documents:\nThe following table shows the 5 most representative documents for each topic that were identified and analyzed to provide context to our topic naming process.\n\n\n\n\nTop 5 Articles per Topic\n\n\nTopic Name\nmax_gamma\nTitle\n\n\n\n\nColombia-Venezuela Diplomacy\n0.9983723\nPetro invitará a más sectores de la oposición venezolana: esto es lo que sabe\n\n\nColombia-Venezuela Diplomacy\n0.9981617\n¿Se congelan o no las reformas del Gobierno en la Cámara de Representantes?\n\n\nColombia-Venezuela Diplomacy\n0.9980557\nCongelar el debate, la estrategia para salvar las reformas en el Congreso\n\n\nColombia-Venezuela Diplomacy\n0.9979206\nEl balance de EE. UU. sobre la Cumbre de Venezuela, organizada por Gustavo Petro\n\n\nColombia-Venezuela Diplomacy\n0.9973620\nConferencia sobre Venezuela apunta a un segundo encuentro y pide elecciones pronto\n\n\nEnvironmental Degradation\n0.9992601\n'Es fundamental que se esté recuperando la certidumbre con empresarios': mincomercio\n\n\nEnvironmental Degradation\n0.9992372\nLa oferta, clave para ganar la batalla de la descarbonización\n\n\nEnvironmental Degradation\n0.9990861\nNuevo estudio hace el balance de las reservas de carbono en la Amazonia\n\n\nEnvironmental Degradation\n0.9987138\nLatinoamérica enfrenta la mayor reducción de especies y hábitats Esta región ha sufrido una mengua del 94 %\n\n\nEnvironmental Degradation\n0.9986660\nGas natural, clave en la transición energética\n\n\nGuerrilla\n0.9991331\nFiscalía apela fallo que negó preclución a favor de Álvaro Uribe\n\n\nGuerrilla\n0.9991331\nFiscalía apela fallo que negó preclusión a favor de Álvaro Uribe\n\n\nGuerrilla\n0.9984517\n\"Uribe siempre tuvo conocimiento de la operación del Aro\": Mancuso en la JEP\n\n\nGuerrilla\n0.9981036\nJulio Gerlein: El zar de la contratación al que Fiscalía imputará tras fuga de Merlano\n\n\nGuerrilla\n0.9980346\nCaso Álvaro Uribe: así avanza audiencia que define si se cierra elproceso en su contra\n\n\nMigration\n0.9990523\nMigrantes venezolanos no tienen protección ante el coronavirus en Norte de Santander\n\n\nMigration\n0.9987105\nAsí está la situación en la frontera de EE. UU. tras una semana del fin del Título 42\n\n\nMigration\n0.9987043\nAccidentes viales, otro flagelo que enfrentan los migrantes, además del Darién\n\n\nMigration\n0.9984426\nAmnistía Internacional pidió a Colombia reconocer como refugiados a venezolanos\n\n\nMigration\n0.9983822\nLa Guajira atraviesa otra ola migratoria, esta vez durante la pandemia\n\n\nSoccer\n0.9995505\nMercado de fichajes, en vivo: movimientos de última hora en plena primera fecha\n\n\nSoccer\n0.9995482\nMercado de fichajes, en vivo: movimientos de última hora antes de la primera fecha\n\n\nSoccer\n0.9995154\nMercado de fichajes, en vivo: Santa Fe se sigue moviendo, pero perdió una pieza\n\n\nSoccer\n0.9994794\nMercado de fichajes, en vivo: baja de Millonarios se va a otro equipo colombiano\n\n\nSoccer\n0.9993927\nMercado de fichajes de la Liga, en vivo: 'Tití' Rodríguez debutó con gol en Junior\n\n\nVenezuelan Politics\n0.9968177\nPortugal responde a Maduro y dice que fue Venezuela quien atacó a su crucero\n\n\nVenezuelan Politics\n0.9966397\nAgente de la DEA, acusado de filtrar información confidencial sobre Álex Saab\n\n\nVenezuelan Politics\n0.9964870\n¿Qué se sabe de los negocios de Álex Saab y Álvaro Pulido en Venezuela ?\n\n\nVenezuelan Politics\n0.9964640\nÁlex Saab, señalado por corrupción en Pdvsa: este sería el monto desfalcado\n\n\nVenezuelan Politics\n0.9964638\nFiscalía venezolana pide capturas por operativo militar\n\n\n\n\n\n\n\nTopic Breakdown:\n\nColombia-Venezuela Diplomacy: This topic focuses on articles discussing international conference agreements concerning Venezuela, meetings between Colombia’s president, Gustavo Petro, and the opposition group of the current Chavista regime, Plataforma Unitaria Democrática de Venezuela. It also includes coverage of the controversy surrounding a comment made by the former Colombian ambassador to Venezuela, which influenced public opinion on a Colombian health reform.\nNotably, all top articles for this topic are from 2023, closely tied to the Cumbre sobre Venezuela en Bogotá (Venezuela Summit) that took place this year. The summit highlighted Petro’s widely reported stance on Venezuela, in which he attributes the country’s challenges to U.S. sanctions (Rojas Silva, 2024).\nEnvironmental Degradation: The most relevant articles in this topic focus on environmental relief strategies for the Amazon region, involving Brazil, Colombia, Ecuador, Peru, and Venezuela, in response to climate change. These strategies include initiatives such as transitioning to natural gas and making carbon markets more appealing to companies. Articles also highlight biodiversity loss caused by deforestation. One notable article raises concerns about Colombian businesses and their relationships with Venezuela, connecting the broader theme of environmental devastation to the role of companies in these processes. These articles are united by their focus on the environmental challenges and the influence of economic actors in addressing or exacerbating these issues.\nGuerrilla: The top articles in this topic center on ongoing legal cases involving Colombian politicians. A primary focus is the Caso Uribe, where former Colombian president Álvaro Uribe is accused of alleged ties to right-wing paramilitary and narcotrafficking groups, with key developments occurring in 2023 as the prosecutor’s office formally accused him. The topic connects to Venezuela through Uribe’s lawyer, who is also under investigation and linked to a former Colombian ambassador in Venezuela. Additionally, the topic includes articles about Aida Merlano, a Colombian politician convicted in 2019 for conspiracy, weapons possession, and electoral crimes (BBC News Mundo, 2019). Collectively, these articles connect through their focus on legal proceedings involving politicians with alleged links to guerrilla and criminal groups.\nMigration: The most relevant articles in this topic address the challenges faced by Venezuelan immigrants. Some articles highlight their vulnerability during the COVID-19 pandemic and Colombian cities’ responses to the large immigration wave at that time. Others focus on the dangers Venezuelan migrants face crossing one of the most perilous routes on their way to North America, particularly the United States (Roy, D, 2024). Additionally, one article advocates for Colombia to recognize Venezuelan immigrants as refugees to ensure their rights are protected. Another article discusses the 2023 policy changes in the U.S. after the removal of Title 42, which previously allowed border authorities to turn away migrants under COVID-19 health restrictions. The new policy prevents asylum seekers from applying if they did not first seek protection in transit countries or apply online (Long, C, 2023). These articles are connected through their examination of the challenges Venezuelan immigrants face due to shifting policies in Colombia and the United States.\nSoccer: The articles in this topic report on soccer matches, players, and regional and international competitions. These articles are connected by their focus on major events and news related to soccer as a sport.\nVenezuela Politics: The most relevant articles in this topic cover significant events in Venezuela’s political landscape. One article highlights the conflict between Portugal and Venezuela’s president Maduro, following an attack on a Portuguese cruise ship by the Venezuelan navy. Other top articles focus on Alex Saab, a Venezuelan politician accused of business deals worth an estimated $135 million with the Venezuelan government (Redacción Judicial, 2019). Coverage intensified in 2023 when Saab was released as part of a prisoner exchange with the U.S. These articles are connected through their coverage of key political events in Venezuela, showcasing both internal controversies and international conflicts.\n\nTopic Evolution Over Time:\n\nTopic Distribution:\nThe following graph shows the distribution of topics across different years. It allows to identify trends and shifts over time."
  },
  {
    "objectID": "LDA_thematic_analysis/Report.html#conclusion",
    "href": "LDA_thematic_analysis/Report.html#conclusion",
    "title": "Venezuela-Colombia Relations through the News: A Topic Modeling Analysis",
    "section": "Conclusion",
    "text": "Conclusion\nOur analysis revealed key themes that deepen the understanding of Venezuelan migration in Colombian media. A central finding is the recurring narrative of vulnerability faced by migrants—whether through the risks of crossing the Darien Gap, struggles during the COVID-19 pandemic, or exploitation in human trafficking cases. Policies, such as the U.S. removal of Title 42, further complicated their journey, positioning Colombia as a critical transit country.\nHaving Gaza as a subtopic was a surprising insight. While unrelated to Venezuelan migration, the coverage of forced displacement in Gaza highlighted a global pattern of vulnerability during movement. This parallel broadens the scope of our findings and situates Venezuelan migration within a larger context.\nLocally, Colombian communities seemed to play a mixed role— topics like Venezuelan Migration Crisis described ways in which Colombians would be impacted by the immigrants, while the topic of Darien Migration route revelead that others benefiting economically, especially in border areas. Challenges within institutions, like issues for Venezuelan doctors in the health sector, reveal the structural struggles migrants face in Colombia.\nFinally, the sharp increase in coverage in 2023 reflects migration’s growing importance in Colombian media. Topics such as Migration, Diplomacy, and Guerrilla gained prominence, illustrating shifting political and social priorities. By applying LDA iteratively, we uncovered both broad themes and nuanced subtopics, demonstrating the value of focused modeling in revealing the complexities of migration narratives and their global connections. Additionally, we also understood the importance of pairing this style of modelling with a strong method for determining the topic names and capture the nuances of the ways how different articles connect."
  },
  {
    "objectID": "LDA_thematic_analysis/Report.html#presentation-slides-1",
    "href": "LDA_thematic_analysis/Report.html#presentation-slides-1",
    "title": "Venezuela-Colombia Relations through the News: A Topic Modeling Analysis",
    "section": "Presentation slides",
    "text": "Presentation slides"
  },
  {
    "objectID": "Dec1st_Visualization_ANOVA.html#raw-data",
    "href": "Dec1st_Visualization_ANOVA.html#raw-data",
    "title": "Soil nutrient dynamics - Results",
    "section": "Raw data",
    "text": "Raw data\n\n\n  Sample.number Initial.Temperature WHC Stage    Stage.name\n1          PT-1                  NA  14     1 pre treatment\n2          PT-2                  NA  14     1 pre treatment\n3          PT-3                  NA  14     1 pre treatment\n  Extractable.C..ug.C.g.soil. Extractable.N..ug.N.g.soil. ubial.C..ug.C.g.soil.\n1                    490.8155                    108.8163              376.5886\n2                    481.7010                    104.9009              387.6645\n3                    479.9743                    104.4946              423.7208\n  ubial.N..ug.N.g.soil. ubial.C.N\n1              71.54852  5.263401\n2              75.18283  5.156290\n3              86.76098  4.883772"
  },
  {
    "objectID": "Dec1st_Visualization_ANOVA.html#graphs-per-variable-in-the-different-stages",
    "href": "Dec1st_Visualization_ANOVA.html#graphs-per-variable-in-the-different-stages",
    "title": "Soil nutrient dynamics - Results",
    "section": "Graphs per variable in the different stages",
    "text": "Graphs per variable in the different stages\n\nExtractable C\nI used the same code below to produce all the graphs in this section:\nIn this graph I also tried using the R package viridis - magma\n\nstage_plots &lt;- list()  #empty list for storing the plots\n\nfor (stage_num in 1:5) {\n  stage_data &lt;- NutriCamp %&gt;%\n    filter(Stage == stage_num) %&gt;%\n    group_by(WHC, Initial.Temperature) %&gt;%\n    summarise(Extractable_C_mean = mean(Extractable.C..ug.C.g.soil., na.rm = TRUE),\n              Extractable_C_sd = sd(Extractable.C..ug.C.g.soil., na.rm = TRUE),\n              .groups = \"drop\") %&gt;%\n    mutate(Extractable_C_sem = Extractable_C_sd / sqrt(3)) # SEM calculation\n\n  p &lt;- ggplot(stage_data, aes(x = factor(WHC), y = Extractable_C_mean, fill = as.factor(Initial.Temperature))) +\n    geom_bar(stat = \"identity\", position = position_dodge(0.9), color = \"black\") +\n    geom_errorbar(aes(ymin = Extractable_C_mean - Extractable_C_sem, ymax = Extractable_C_mean + Extractable_C_sem),\n                  width = 0.2, position = position_dodge(0.9), color = \"black\") +\n    labs(title = paste(\"Extractable C - Stage\", stage_num),\n         x = \"WHC\", y = \"Extractable C (ug C/g soil)\") +\n    theme_classic() +\n    scale_fill_viridis_d(name = \"Initial Temperature\", option = \"magma\") +\n    theme(axis.title.x = element_text(face = \"bold\"), \n          axis.title.y = element_text(face = \"bold\"),\n          plot.title = element_text(hjust = 0.5, face = \"bold\"))\n\n  stage_plots[[paste0(\"Stage_\", stage_num)]] &lt;- p\n}\n\nstage_plots\n\n$Stage_1\n\n\n\n\n\n\n\n\n\n\n$Stage_2\n\n\n\n\n\n\n\n\n\n\n$Stage_3\n\n\n\n\n\n\n\n\n\n\n$Stage_4\n\n\n\n\n\n\n\n\n\n\n$Stage_5\n\n\n\n\n\n\n\n\n\n\n\nAnova results Extractable C\n\nstage_plots &lt;- list()\nanova_results &lt;- list()\n\nfor (stage_num in 1:5) {\n  stage_data &lt;- NutriCamp %&gt;%\n    filter(Stage == stage_num) %&gt;%\n    group_by(WHC, Initial.Temperature) %&gt;%\n    summarise(Extractable_C_mean = mean(Extractable.C..ug.C.g.soil., na.rm = TRUE),\n              Extractable_C_sd = sd(Extractable.C..ug.C.g.soil., na.rm = TRUE),\n              .groups = \"drop\") %&gt;%\n    mutate(Extractable_C_sem = Extractable_C_sd / sqrt(3)) # SEM calculation\n\n  # Check if WHC and Initial.Temperature have at least two levels\n  if (n_distinct(stage_data$WHC) &gt; 1 & n_distinct(stage_data$Initial.Temperature) &gt; 1) {\n    anova_result &lt;- aov(Extractable.C..ug.C.g.soil. ~ WHC * Initial.Temperature, data = NutriCamp %&gt;% filter(Stage == stage_num))\n    anova_summary &lt;- summary(anova_result)\n    anova_results[[paste0(\"Stage_\", stage_num)]] &lt;- anova_summary\n  } else {\n    anova_results[[paste0(\"Stage_\", stage_num)]] &lt;- \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n  }\n}\n\nanova_results\n\n$Stage_1\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_2\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_3\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)\nWHC                      1  10653   10653   2.251  0.156\nInitial.Temperature      1   1977    1977   0.418  0.529\nWHC:Initial.Temperature  1   1873    1873   0.396  0.539\nResiduals               14  66256    4733               \n\n$Stage_4\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)  \nWHC                      1   2147    2147   2.200 0.1602  \nInitial.Temperature      1    532     532   0.545 0.4727  \nWHC:Initial.Temperature  1   3438    3438   3.522 0.0815 .\nResiduals               14  13664     976                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$Stage_5\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)  \nWHC                      1  16156   16156   4.271 0.0578 .\nInitial.Temperature      1   1475    1475   0.390 0.5424  \nWHC:Initial.Temperature  1  15570   15570   4.116 0.0619 .\nResiduals               14  52960    3783                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nExtractable N\nIn this graph I tried changing the orientation of the bars to evaluate if it was easier to compare.\n\n\n$Stage_1\n\n\n\n\n\n\n\n\n\n\n$Stage_2\n\n\n\n\n\n\n\n\n\n\n$Stage_3\n\n\n\n\n\n\n\n\n\n\n$Stage_4\n\n\n\n\n\n\n\n\n\n\n$Stage_5\n\n\n\n\n\n\n\n\n\n\n\nAnova results Extractable N\n\n\n$Stage_1\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_2\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_3\n                        Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nWHC                      1  51551   51551  79.987 3.66e-07 ***\nInitial.Temperature      1     20      20   0.032    0.861    \nWHC:Initial.Temperature  1   1273    1273   1.975    0.182    \nResiduals               14   9023     644                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$Stage_4\n                        Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nWHC                      1  60124   60124  90.003 1.79e-07 ***\nInitial.Temperature      1    140     140   0.209    0.655    \nWHC:Initial.Temperature  1    396     396   0.593    0.454    \nResiduals               14   9352     668                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$Stage_5\n                        Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nWHC                      1   6798    6798  20.950 0.000431 ***\nInitial.Temperature      1   6380    6380  19.662 0.000566 ***\nWHC:Initial.Temperature  1    409     409   1.261 0.280283    \nResiduals               14   4543     325                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nMicrobial C graph\n\n\n$Stage_1\n\n\n\n\n\n\n\n\n\n\n$Stage_2\n\n\n\n\n\n\n\n\n\n\n$Stage_3\n\n\n\n\n\n\n\n\n\n\n$Stage_4\n\n\n\n\n\n\n\n\n\n\n$Stage_5\n\n\n\n\n\n\n\n\n\n\n\nAnova results microbial C\n\n\n$Stage_1\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_2\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_3\n                        Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nWHC                      1 124271  124271   8.987 0.00959 **\nInitial.Temperature      1   2024    2024   0.146 0.70776   \nWHC:Initial.Temperature  1  10760   10760   0.778 0.39261   \nResiduals               14 193588   13828                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$Stage_4\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)   \nWHC                      1  62008   62008  10.105 0.0067 **\nInitial.Temperature      1    847     847   0.138 0.7159   \nWHC:Initial.Temperature  1    508     508   0.083 0.7778   \nResiduals               14  85908    6136                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$Stage_5\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)  \nWHC                      1   8741    8741   1.064  0.320  \nInitial.Temperature      1    817     817   0.100  0.757  \nWHC:Initial.Temperature  1  25977   25977   3.164  0.097 .\nResiduals               14 114960    8211                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nMicrobial N graph\n\n\n$Stage_1\n\n\n\n\n\n\n\n\n\n\n$Stage_2\n\n\n\n\n\n\n\n\n\n\n$Stage_3\n\n\n\n\n\n\n\n\n\n\n$Stage_4\n\n\n\n\n\n\n\n\n\n\n$Stage_5\n\n\n\n\n\n\n\n\n\n\n\nAnova results microbial N\n\n\n$Stage_1\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_2\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_3\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)  \nWHC                      1  11213   11213   7.825 0.0143 *\nInitial.Temperature      1   4710    4710   3.287 0.0913 .\nWHC:Initial.Temperature  1   1745    1745   1.218 0.2884  \nResiduals               14  20062    1433                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$Stage_4\n                        Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nWHC                      1   5899    5899  11.151 0.00487 **\nInitial.Temperature      1   1174    1174   2.218 0.15857   \nWHC:Initial.Temperature  1    294     294   0.556 0.46811   \nResiduals               14   7406     529                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$Stage_5\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)\nWHC                      1     93    92.8   0.226  0.642\nInitial.Temperature      1    178   178.3   0.434  0.521\nWHC:Initial.Temperature  1    131   131.5   0.320  0.580\nResiduals               14   5745   410.3               \n\n\n\n\nMicrobial C/N ratio graph\n\n\n$Stage_1\n\n\n\n\n\n\n\n\n\n\n$Stage_2\n\n\n\n\n\n\n\n\n\n\n$Stage_3\n\n\n\n\n\n\n\n\n\n\n$Stage_4\n\n\n\n\n\n\n\n\n\n\n$Stage_5\n\n\n\n\n\n\n\n\n\n\n\nAnova results Microbial C/N\n\n\n$Stage_1\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_2\n[1] \"ANOVA not performed: Insufficient levels in WHC or Initial.Temperature.\"\n\n$Stage_3\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)  \nWHC                      1  2.487   2.487   1.048 0.3246  \nInitial.Temperature      1  7.679   7.679   3.236 0.0953 .\nWHC:Initial.Temperature  1  4.265   4.265   1.798 0.2030  \nResiduals               13 30.846   2.373                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n1 observation deleted due to missingness\n\n$Stage_4\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)\nWHC                      1  2.809  2.8090   1.308  0.272\nInitial.Temperature      1  0.850  0.8503   0.396  0.539\nWHC:Initial.Temperature  1  1.494  1.4939   0.695  0.418\nResiduals               14 30.075  2.1482               \n\n$Stage_5\n                        Df Sum Sq Mean Sq F value Pr(&gt;F)  \nWHC                      1  3.344   3.344   4.791 0.0460 *\nInitial.Temperature      1  0.247   0.247   0.355 0.5610  \nWHC:Initial.Temperature  1  2.518   2.518   3.609 0.0783 .\nResiduals               14  9.769   0.698                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Dec1st_Visualization_ANOVA.html#table-individual-anova-summary",
    "href": "Dec1st_Visualization_ANOVA.html#table-individual-anova-summary",
    "title": "Soil nutrient dynamics - Results",
    "section": "Table: Individual ANOVA summary",
    "text": "Table: Individual ANOVA summary\n\n\n\n\n\n\n\n\n\n\nStage\nVariable\nWHC (p-value)\nInitial Temperature (p-value)\nInteraction (p-value)\n\n\n\n\n3\nExtractable C\n3.66e-07 ***\n0.861\n0.182\n\n\n4\nExtractable C\n1.79e-07 ***\n0.655\n0.454\n\n\n5\nExtractable C\n0.000431 ***\n0.000566 ***\n0.280\n\n\n3\nExtractable N\n3.66e-07 ***\n0.861\n0.182\n\n\n4\nExtractable N\n1.79e-07 ***\n0.655\n0.454\n\n\n5\nExtractable N\n0.000431 ***\n0.000566 ***\n0.280\n\n\n3\nMicrobial C\n0.00959 **\n0.70776\n0.39261\n\n\n4\nMicrobial C\n0.0067 **\n0.7159\n0.7778\n\n\n5\nMicrobial C\n0.320\n0.757\n0.097\n\n\n3\nMicrobial N\n0.3246\n0.0953 .\n0.203\n\n\n4\nMicrobial N\n0.272\n0.539\n0.418\n\n\n5\nMicrobial N\n0.0460 *\n0.561\n0.0783 ."
  },
  {
    "objectID": "Dec1st_Visualization_ANOVA.html#evolution-over-stages-per-nutrient",
    "href": "Dec1st_Visualization_ANOVA.html#evolution-over-stages-per-nutrient",
    "title": "Soil nutrient dynamics - Results",
    "section": "Evolution over stages per nutrient",
    "text": "Evolution over stages per nutrient\n\nProcessed data\n\n\n# A tibble: 6 × 7\n  Stage   WHC Initial.Temperature Variable                     Mean    SD    SEM\n  &lt;dbl&gt; &lt;dbl&gt;               &lt;dbl&gt; &lt;chr&gt;                       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1     1    14                  25 Extractable.C..ug.C.g.soi… 483.    4.50  2.60 \n2     1    14                  25 Extractable.N..ug.N.g.soi… 107.    2.05  1.18 \n3     1    14                  25 ubial.C..ug.C.g.soil.      399.   21.2  12.3  \n4     1    14                  25 ubial.C.N                    5.79  1.55  0.895\n5     1    14                  25 ubial.N..ug.N.g.soil.       71.7  13.9   8.01 \n6     1    14                  35 Extractable.C..ug.C.g.soi… 483.    4.50  2.60 \n\n\n\n\nExtractable C evolution Path 4 and path 5\nI used the same code below to produce all the graphs in this section:\n\n# Filter the data for a specific variable (e.g., Extractable C)\nExC_variable_data &lt;- long_NutriCamp %&gt;%\n  filter(Variable == \"Extractable.C..ug.C.g.soil.\") %&gt;%\n  mutate(\n    Initial.Temperature = factor(Initial.Temperature, levels = c(25,35)), # temps have to be categorical\n    Stage = factor(Stage, levels = 1:5), # stages have to be categorical\n    WHC = factor(WHC) # WHC as a factor\n  )\n\n# Split the data into two paths: one for Stage 4, one for Stage 5\npath4_data &lt;- ExC_variable_data %&gt;% filter(Stage %in% c(1, 2, 3, 4))\npath5_data &lt;- ExC_variable_data %&gt;% filter(Stage %in% c(1, 2, 3, 5))\n\n# Function to plot a single path\nplot_path &lt;- function(data, title) {\n  ggplot(data, aes(x = Stage, y = Mean, group = interaction(WHC, Initial.Temperature))) +\n    geom_line(aes(color = WHC, linetype = Initial.Temperature), size = 1) +\n    geom_point(aes(shape = Initial.Temperature), size = 3) +  \n    geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM, color = WHC,  linetype = Initial.Temperature), width = 0.2) +  # Color-matched error bars\n    scale_color_viridis_d(option = \"plasma\", name = \"WHC (%)\") +\n    labs(\n      title = title,\n      x = \"Stage\", y = \"Extractable C (ug C /g soil)\",\n      linetype = \"Initial Temperature\", shape = \"Initial Temperature\"\n    ) +\n    theme_classic() +\n    theme(\n      legend.position = \"right\",\n      plot.title = element_text(hjust = 0.5, face = \"bold\"),\n      axis.title = element_text(face = \"bold\"),\n      strip.text = element_text(face = \"bold\")\n    )\n}\n\n\n# Plot each path separately\nplot_path4 &lt;- plot_path(path4_data, \"Evolution of Extractable C: Stages 1 → 2 → 3 → 4\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nplot_path5 &lt;- plot_path(path5_data, \"Evolution of Extractable C: Stages 1 → 2 → 3 → 5\")\n\nlibrary(patchwork)\nplot_path4 / plot_path5 # Combine the two plots vertically\n\n\n\n\n\n\n\n\n\n\nExtractable N evolution Path 4 and path 5\n\n\n\n\n\n\n\n\n\n\n\nMicrobial C evolution Path 4 and path 5\n\n\n\n\n\n\n\n\n\n\n\nMicrobial N evolution Path 4 and path 5\n\n\n\n\n\n\n\n\n\n\n\nMicrobial C/N evolution Path 4 and path 5"
  },
  {
    "objectID": "Dec1st_Visualization_ANOVA.html#anova-between-stages-of-interest",
    "href": "Dec1st_Visualization_ANOVA.html#anova-between-stages-of-interest",
    "title": "Soil nutrient dynamics - Results",
    "section": "ANOVA between stages of interest",
    "text": "ANOVA between stages of interest\n\nvariables &lt;- c(\"Extractable.C..ug.C.g.soil.\", \"Extractable.N..ug.N.g.soil.\",\n               \"ubial.C..ug.C.g.soil.\", \"ubial.N..ug.N.g.soil.\", \"ubial.C.N\")\n\n# Define a function to perform the ANOVA for each variable\nperform_anova &lt;- function(variable) {\n  \n  # Stage 1 vs Stage 2 (moisture as the independent variable)\n  stage1_stage2 &lt;- NutriCamp %&gt;%\n    filter(Stage %in% c(1, 2)) %&gt;%\n    filter(!is.na(WHC))\n  \n  anova_stage1_stage2 &lt;- aov(as.formula(paste(variable, \"~ factor(WHC)\")), data = stage1_stage2)\n  summary_stage1_stage2 &lt;- summary(anova_stage1_stage2)\n  \n  # Stage 2 vs Stage 3 (temperature as the independent variable)\n  stage2_stage3 &lt;- NutriCamp %&gt;%\n    filter(Stage %in% c(2, 3)) %&gt;%\n    filter(!is.na(Initial.Temperature))\n  \n  anova_stage2_stage3 &lt;- aov(as.formula(paste(variable, \"~ factor(Initial.Temperature)\")), data = stage2_stage3)\n  summary_stage2_stage3 &lt;- summary(anova_stage2_stage3)\n  \n  # Stage 3 vs Stage 4 (both temperature and moisture as independent variables)\n  stage3_stage4 &lt;- NutriCamp %&gt;%\n    filter(Stage %in% c(3, 4)) %&gt;%\n    filter(!is.na(Initial.Temperature) & !is.na(WHC))\n  \n  anova_stage3_stage4 &lt;- aov(as.formula(paste(variable, \"~ factor(Initial.Temperature) * factor(WHC)\")), data = stage3_stage4)\n  summary_stage3_stage4 &lt;- summary(anova_stage3_stage4)\n  \n  # Stage 3 vs Stage 5 (both temperature and moisture as independent variables)\n  stage3_stage5 &lt;- NutriCamp %&gt;%\n    filter(Stage %in% c(3, 5)) %&gt;%\n    filter(!is.na(Initial.Temperature) & !is.na(WHC))\n  \n  anova_stage3_stage5 &lt;- aov(as.formula(paste(variable, \"~ factor(Initial.Temperature) * factor(WHC)\")), data = stage3_stage5)\n  summary_stage3_stage5 &lt;- summary(anova_stage3_stage5)\n  \n  # Return the results as a list\n  return(list(\n    variable = variable,\n    stage1_stage2 = summary_stage1_stage2,\n    stage2_stage3 = summary_stage2_stage3,\n    stage3_stage4 = summary_stage3_stage4,\n    stage3_stage5 = summary_stage3_stage5\n  ))\n}\n\n# Apply the function to each variable and store results in a list\nanova_results &lt;- lapply(variables, perform_anova)\n\n# Print the results for each variable\nfor (result in anova_results) {\n  cat(\"\\nVariable:\", result$variable, \"\\n\")\n  cat(\"\\nStage 1 vs Stage 2 (moisture):\\n\")\n  print(result$stage1_stage2)\n  cat(\"\\nStage 2 vs Stage 3 (temperature):\\n\")\n  print(result$stage2_stage3)\n  cat(\"\\nStage 3 vs Stage 4 (temperature and moisture):\\n\")\n  print(result$stage3_stage4)\n  cat(\"\\nStage 3 vs Stage 5 (temperature and moisture):\\n\")\n  print(result$stage3_stage5)\n}\n\n\nVariable: Extractable.C..ug.C.g.soil. \n\nStage 1 vs Stage 2 (moisture):\n            Df Sum Sq Mean Sq F value Pr(&gt;F)\nfactor(WHC)  3   9862    3287   2.283  0.141\nResiduals   10  14397    1440               \n\nStage 2 vs Stage 3 (temperature):\n                            Df Sum Sq Mean Sq F value Pr(&gt;F)\nfactor(Initial.Temperature)  1   1977    1977   0.401  0.535\nResiduals                   16  78782    4924               \n\nStage 3 vs Stage 4 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value Pr(&gt;F)  \nfactor(Initial.Temperature)              1   2279    2279   0.848 0.3645  \nfactor(WHC)                              2  23260   11630   4.326 0.0223 *\nfactor(Initial.Temperature):factor(WHC)  2    161      81   0.030 0.9705  \nResiduals                               30  80647    2688                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nStage 3 vs Stage 5 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value  Pr(&gt;F)    \nfactor(Initial.Temperature)              1     18      18   0.006 0.93631    \nfactor(WHC)                              2  68358   34179  12.100 0.00014 ***\nfactor(Initial.Temperature):factor(WHC)  2  14462    7231   2.560 0.09410 .  \nResiduals                               30  84743    2825                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nVariable: Extractable.N..ug.N.g.soil. \n\nStage 1 vs Stage 2 (moisture):\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nfactor(WHC)  3  11648    3883   43.14 4.98e-06 ***\nResiduals   10    900      90                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nStage 2 vs Stage 3 (temperature):\n                            Df Sum Sq Mean Sq F value Pr(&gt;F)\nfactor(Initial.Temperature)  1     20      20   0.005  0.943\nResiduals                   16  61847    3865               \n\nStage 3 vs Stage 4 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value Pr(&gt;F)    \nfactor(Initial.Temperature)              1    133     133   0.511 0.4802    \nfactor(WHC)                              2 122208   61104 234.162 &lt;2e-16 ***\nfactor(Initial.Temperature):factor(WHC)  2   1714     857   3.284 0.0513 .  \nResiduals                               30   7828     261                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nStage 3 vs Stage 5 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nfactor(Initial.Temperature)              1   3561    3561   3.579   0.0682 .  \nfactor(WHC)                              2  50217   25108  25.232 3.74e-07 ***\nfactor(Initial.Temperature):factor(WHC)  2   1563     782   0.785   0.4651    \nResiduals                               30  29853     995                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nVariable: ubial.C..ug.C.g.soil. \n\nStage 1 vs Stage 2 (moisture):\n            Df Sum Sq Mean Sq F value Pr(&gt;F)\nfactor(WHC)  3  22419    7473   1.459  0.284\nResiduals   10  51212    5121               \n\nStage 2 vs Stage 3 (temperature):\n                            Df Sum Sq Mean Sq F value Pr(&gt;F)\nfactor(Initial.Temperature)  1   2024    2024   0.099  0.758\nResiduals                   16 328619   20539               \n\nStage 3 vs Stage 4 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nfactor(Initial.Temperature)              1   2745    2745   0.293    0.592    \nfactor(WHC)                              2 244107  122054  13.029 8.46e-05 ***\nfactor(Initial.Temperature):factor(WHC)  2   8074    4037   0.431    0.654    \nResiduals                               30 281027    9368                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nStage 3 vs Stage 5 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value Pr(&gt;F)  \nfactor(Initial.Temperature)              1    135     135   0.011 0.9172  \nfactor(WHC)                              2  76126   38063   3.106 0.0594 .\nfactor(Initial.Temperature):factor(WHC)  2  37470   18735   1.529 0.2332  \nResiduals                               30 367640   12255                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nVariable: ubial.N..ug.N.g.soil. \n\nStage 1 vs Stage 2 (moisture):\n            Df Sum Sq Mean Sq F value Pr(&gt;F)  \nfactor(WHC)  3   7126  2375.4   5.174 0.0205 *\nResiduals   10   4591   459.1                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nStage 2 vs Stage 3 (temperature):\n                            Df Sum Sq Mean Sq F value Pr(&gt;F)\nfactor(Initial.Temperature)  1   4710    4710   2.282   0.15\nResiduals                   16  33020    2064               \n\nStage 3 vs Stage 4 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nfactor(Initial.Temperature)              1   5293    5293   7.374   0.0109 *  \nfactor(WHC)                              2  25495   12748  17.759 8.16e-06 ***\nfactor(Initial.Temperature):factor(WHC)  2    433     217   0.302   0.7416    \nResiduals                               30  21535     718                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nStage 3 vs Stage 5 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nfactor(Initial.Temperature)              1   1528    1528   1.625 0.21214   \nfactor(WHC)                              2  12866    6433   6.843 0.00356 **\nfactor(Initial.Temperature):factor(WHC)  2   1475     737   0.784 0.46556   \nResiduals                               30  28202     940                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nVariable: ubial.C.N \n\nStage 1 vs Stage 2 (moisture):\n            Df Sum Sq Mean Sq F value Pr(&gt;F)  \nfactor(WHC)  3  11.95   3.985   3.226 0.0696 .\nResiduals   10  12.35   1.235                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nStage 2 vs Stage 3 (temperature):\n                            Df Sum Sq Mean Sq F value Pr(&gt;F)\nfactor(Initial.Temperature)  1   7.01   7.010   2.748  0.118\nResiduals                   15  38.27   2.551               \n1 observation deleted due to missingness\n\nStage 3 vs Stage 4 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value Pr(&gt;F)\nfactor(Initial.Temperature)              1   6.60   6.598   2.803  0.105\nfactor(WHC)                              2   9.30   4.648   1.975  0.157\nfactor(Initial.Temperature):factor(WHC)  2   1.12   0.561   0.238  0.789\nResiduals                               29  68.26   2.354               \n1 observation deleted due to missingness\n\nStage 3 vs Stage 5 (temperature and moisture):\n                                        Df Sum Sq Mean Sq F value Pr(&gt;F)\nfactor(Initial.Temperature)              1   2.18   2.183   1.235  0.276\nfactor(WHC)                              2   6.75   3.374   1.909  0.166\nfactor(Initial.Temperature):factor(WHC)  2   1.06   0.528   0.299  0.744\nResiduals                               29  51.25   1.767               \n1 observation deleted due to missingness"
  },
  {
    "objectID": "Dec1st_Visualization_ANOVA.html#table-anova-results-for-extractable-c-n-ubial-c-and-ubial-n-across-different-stages",
    "href": "Dec1st_Visualization_ANOVA.html#table-anova-results-for-extractable-c-n-ubial-c-and-ubial-n-across-different-stages",
    "title": "Soil nutrient dynamics - Results",
    "section": "Table: ANOVA Results for Extractable C, N, Ubial C, and Ubial N across Different Stages",
    "text": "Table: ANOVA Results for Extractable C, N, Ubial C, and Ubial N across Different Stages\n\n\n\n\n\n\n\n\n\n\n\nVariable\nStage Comparison\nFactor\nF Value\np-value\nSignificance\n\n\n\n\nExtractable C (ug C/g soil)\nStage 3 vs Stage 4\nWHC\n4.326\n0.0223\n*\n\n\n\nStage 3 vs Stage 5\nWHC\n12.100\n0.00014\n***\n\n\nExtractable N (ug N/g soil)\nStage 1 vs Stage 2\nWHC\n43.14\n4.98e-06\n***\n\n\n\nStage 3 vs Stage 4\nWHC\n234.162\n&lt;2e-16\n***\n\n\n\nStage 3 vs Stage 5\nWHC\n25.232\n3.74e-07\n***\n\n\nMicrobial C (ug C/g soil)\nStage 3 vs Stage 4\nWHC\n13.029\n8.46e-05\n***\n\n\nMicrobial N (ug N/g soil)\nStage 1 vs Stage 2\nWHC\n5.174\n0.0205\n*\n\n\n\nStage 3 vs Stage 4\nInitial Temperature\n7.374\n0.0109\n*\n\n\n\n\nWHC\n17.759\n8.16e-06\n***\n\n\n\nStage 3 vs Stage 5\nWHC\n6.843\n0.00356\n**\n\n\n\nSignificance Codes:\n0 ‘ *** ’ 0.001 ‘ ** ’ 0.01 ‘ * ’ 0.05 ‘ . ’ 0.1 ’’ 1"
  }
]