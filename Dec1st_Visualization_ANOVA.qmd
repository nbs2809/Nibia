---
title: "Soil nutrient dynamics - Results"
format: html
editor: visual
output: html_document
toc: true
toc_depth: 2
---

## Packages

```{r, echo = FALSE, message = FALSE, warning = FALSE}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(viridis)
library(patchwork)
```

## Raw data

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# NutriCamp <- read.csv("~/Desktop/2023-2024/Summer 24'/Data /CSV TRACE Nibia and Deya incubations(Recuperado automáticamente).csv")
# head(NutriCamp, 100)
NutriCamp <- read.csv("~/Desktop/2023-2024/Summer 24'/Data /NutriCampData_ONLY25_35.csv")
head(NutriCamp, 3)
```

## Graphs per variable in the different stages

### Extractable C

I used the same code below to produce all the graphs in this section:

In this graph I also tried using the R package viridis - magma

```{r}
stage_plots <- list()  #empty list for storing the plots

for (stage_num in 1:5) {
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(Extractable_C_mean = mean(Extractable.C..ug.C.g.soil., na.rm = TRUE),
              Extractable_C_sd = sd(Extractable.C..ug.C.g.soil., na.rm = TRUE),
              .groups = "drop") %>%
    mutate(Extractable_C_sem = Extractable_C_sd / sqrt(3)) # SEM calculation

  p <- ggplot(stage_data, aes(x = factor(WHC), y = Extractable_C_mean, fill = as.factor(Initial.Temperature))) +
    geom_bar(stat = "identity", position = position_dodge(0.9), color = "black") +
    geom_errorbar(aes(ymin = Extractable_C_mean - Extractable_C_sem, ymax = Extractable_C_mean + Extractable_C_sem),
                  width = 0.2, position = position_dodge(0.9), color = "black") +
    labs(title = paste("Extractable C - Stage", stage_num),
         x = "WHC", y = "Extractable C (ug C/g soil)") +
    theme_classic() +
    scale_fill_viridis_d(name = "Initial Temperature", option = "magma") +
    theme(axis.title.x = element_text(face = "bold"), 
          axis.title.y = element_text(face = "bold"),
          plot.title = element_text(hjust = 0.5, face = "bold"))

  stage_plots[[paste0("Stage_", stage_num)]] <- p
}

stage_plots

```

### Anova results Extractable C

```{r}
stage_plots <- list()
anova_results <- list()

for (stage_num in 1:5) {
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(Extractable_C_mean = mean(Extractable.C..ug.C.g.soil., na.rm = TRUE),
              Extractable_C_sd = sd(Extractable.C..ug.C.g.soil., na.rm = TRUE),
              .groups = "drop") %>%
    mutate(Extractable_C_sem = Extractable_C_sd / sqrt(3)) # SEM calculation

  # Check if WHC and Initial.Temperature have at least two levels
  if (n_distinct(stage_data$WHC) > 1 & n_distinct(stage_data$Initial.Temperature) > 1) {
    anova_result <- aov(Extractable.C..ug.C.g.soil. ~ WHC * Initial.Temperature, data = NutriCamp %>% filter(Stage == stage_num))
    anova_summary <- summary(anova_result)
    anova_results[[paste0("Stage_", stage_num)]] <- anova_summary
  } else {
    anova_results[[paste0("Stage_", stage_num)]] <- "ANOVA not performed: Insufficient levels in WHC or Initial.Temperature."
  }
}

anova_results

```

### Extractable N

In this graph I tried changing the orientation of the bars to evaluate if it was easier to compare.

```{r, echo = FALSE, message = FALSE, warning = FALSE}
stage_plots <- list()

for (stage_num in 1:5) {
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(Extractable_N_mean = mean(Extractable.N..ug.N.g.soil., na.rm = TRUE),
              Extractable_N_sd = sd(Extractable.N..ug.N.g.soil., na.rm = TRUE),
              .groups = "drop") %>%
    mutate(Extractable_N_sem = Extractable_N_sd / sqrt(3)) # SEM calculation

  p <- ggplot(stage_data, aes(x = factor(WHC), y = Extractable_N_mean, fill = as.factor(Initial.Temperature))) +
      coord_flip()+
    geom_bar(stat = "identity", position = position_dodge(0.9), color = "black") + # Add black outline
    geom_errorbar(aes(ymin = Extractable_N_mean - Extractable_N_sem, ymax = Extractable_N_mean + Extractable_N_sem),
                  width = 0.2, position = position_dodge(0.9), color = "black") + # Adjust error bar width and color
    labs(title = paste("Extractable N - Stage", stage_num),
         x = "WHC", y = "Extractable N (ug C/g soil)") +
    theme_classic() +
    scale_fill_discrete(name = "Initial Temperature") +
    theme(axis.title.x = element_text(face = "bold"), 
          axis.title.y = element_text(face = "bold"),
          plot.title = element_text(hjust = 0.5, face = "bold"))

  stage_plots[[paste0("Stage_", stage_num)]] <- p
}

# Print all the plots
stage_plots

```

### Anova results Extractable N

```{r, echo = FALSE, message = FALSE, warning = FALSE}
stage_plots <- list()
anova_results <- list()

for (stage_num in 1:5) {
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(Extractable_N_mean = mean(Extractable.N..ug.N.g.soil., na.rm = TRUE),
              Extractable_N_sd = sd(Extractable.N..ug.N.g.soil., na.rm = TRUE),
              .groups = "drop") %>%
    mutate(Extractable_N_sem = Extractable_N_sd / sqrt(3)) # SEM calculation

  # Check if WHC and Initial.Temperature have at least two levels
  if (n_distinct(stage_data$WHC) > 1 & n_distinct(stage_data$Initial.Temperature) > 1) {
    anova_result <- aov(Extractable.N..ug.N.g.soil. ~ WHC * Initial.Temperature, data = NutriCamp %>% filter(Stage == stage_num))
    anova_summary <- summary(anova_result)
    anova_results[[paste0("Stage_", stage_num)]] <- anova_summary
  } else {
    anova_results[[paste0("Stage_", stage_num)]] <- "ANOVA not performed: Insufficient levels in WHC or Initial.Temperature."
  }
}

# Display ANOVA results
anova_results


```

### Microbial C graph

```{r, echo = FALSE, message = FALSE, warning = FALSE}
stage_plots <- list()

for (stage_num in 1:5) {
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(ubial_C_mean = mean(ubial.C..ug.C.g.soil., na.rm = TRUE),
              ubial_C_sd = sd(ubial.C..ug.C.g.soil., na.rm = TRUE),
              .groups = "drop") %>%
    mutate(ubial_C_sem = ubial_C_sd / sqrt(3)) # SEM calculation

  p <- ggplot(stage_data, aes(x = factor(WHC), y = ubial_C_mean, fill = as.factor(Initial.Temperature))) +
    geom_bar(stat = "identity", position = position_dodge(0.9), color = "black") + # Add black outline
    geom_errorbar(aes(ymin = ubial_C_mean - ubial_C_sem, ymax = ubial_C_mean + ubial_C_sem),
                  width = 0.2, position = position_dodge(0.9), color = "black") + # Adjust error bar width and color
    labs(title = paste("ubial C - Stage", stage_num),
         x = "WHC", y = "ubial C (ug C/g soil)") +
    theme_classic() +
    scale_fill_discrete(name = "Initial Temperature") +
    theme(axis.title.x = element_text(face = "bold"), 
          axis.title.y = element_text(face = "bold"),
          plot.title = element_text(hjust = 0.5, face = "bold"))

  stage_plots[[paste0("Stage_", stage_num)]] <- p
}

# Print all the plots
stage_plots

```

### Anova results microbial C

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# List to store plots and ANOVA results for each stage
stage_plots <- list()
anova_results <- list()

# Loop through each stage and generate the plot with ANOVA results
for (stage_num in 1:5) {
  # Filter and calculate summary stats for the current stage
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(ubial_C_mean = mean(ubial.C..ug.C.g.soil., na.rm = TRUE),
              ubial_C_sd = sd(ubial.C..ug.C.g.soil., na.rm = TRUE),
              .groups = "drop") %>%
    mutate(ubial_C_sem = ubial_C_sd / sqrt(3)) # SEM calculation

  # Check if WHC and Initial.Temperature have at least two levels
  if (n_distinct(stage_data$WHC) > 1 & n_distinct(stage_data$Initial.Temperature) > 1) {
    # Run ANOVA only if both variables have 2 or more levels
    anova_result <- aov(ubial.C..ug.C.g.soil. ~ WHC * Initial.Temperature, data = NutriCamp %>% filter(Stage == stage_num))
    anova_summary <- summary(anova_result)
    anova_results[[paste0("Stage_", stage_num)]] <- anova_summary
  } else {
    # Store a message if ANOVA could not be run due to lack of levels
    anova_results[[paste0("Stage_", stage_num)]] <- "ANOVA not performed: Insufficient levels in WHC or Initial.Temperature."
  }
}

# Display ANOVA results
anova_results

```

### Microbial N graph

```{r, echo = FALSE, message = FALSE, warning = FALSE}
stage_plots <- list()

for (stage_num in 1:5) {
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(ubial_N_mean = mean(ubial.N..ug.N.g.soil., na.rm = TRUE),
              ubial_N_sd = sd(ubial.N..ug.N.g.soil., na.rm = TRUE),
              .groups = "drop") %>%
    mutate(ubial_N_sem = ubial_N_sd / sqrt(3)) # SEM calculation

  p <- ggplot(stage_data, aes(x = factor(WHC), y = ubial_N_mean, fill = as.factor(Initial.Temperature))) +
    geom_bar(stat = "identity", position = position_dodge(0.9), color = "black") + # Add black outline
    geom_errorbar(aes(ymin = ubial_N_mean - ubial_N_sem, ymax = ubial_N_mean + ubial_N_sem),
                  width = 0.2, position = position_dodge(0.9), color = "black") + # Adjust error bar width and color
    labs(title = paste("ubial N - Stage", stage_num),
         x = "WHC", y = "ubial N (ug C/g soil)") +
    theme_classic() +
    scale_fill_discrete(name = "Initial Temperature") +
    theme(axis.title.x = element_text(face = "bold"), 
          axis.title.y = element_text(face = "bold"),
          plot.title = element_text(hjust = 0.5, face = "bold"))

  stage_plots[[paste0("Stage_", stage_num)]] <- p
}

# Print all the plots
stage_plots

```

### Anova results microbial N

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# List to store plots and ANOVA results for each stage
stage_plots <- list()
anova_results <- list()

# Loop through each stage and generate the plot with ANOVA results
for (stage_num in 1:5) {
  # Filter and calculate summary stats for the current stage
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(ubial_N_mean = mean(ubial.N..ug.N.g.soil., na.rm = TRUE),
              ubial_N_sd = sd(ubial.N..ug.N.g.soil., na.rm = TRUE),
              .groups = "drop") %>%
    mutate(ubial_N_sem = ubial_N_sd / sqrt(3)) # SEM calculation

  # Check if WHC and Initial.Temperature have at least two levels
  if (n_distinct(stage_data$WHC) > 1 & n_distinct(stage_data$Initial.Temperature) > 1) {
    # Run ANOVA only if both variables have 2 or more levels
    anova_result <- aov(ubial.N..ug.N.g.soil. ~ WHC * Initial.Temperature, data = NutriCamp %>% filter(Stage == stage_num))
    anova_summary <- summary(anova_result)
    anova_results[[paste0("Stage_", stage_num)]] <- anova_summary
  } else {
    # Store a message if ANOVA could not be run due to lack of levels
    anova_results[[paste0("Stage_", stage_num)]] <- "ANOVA not performed: Insufficient levels in WHC or Initial.Temperature."
  }
}

# Display ANOVA results
anova_results

```

### Microbial C/N ratio graph

```{r, echo = FALSE, message = FALSE, warning = FALSE}
stage_plots <- list()

for (stage_num in 1:5) {
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(ubial_CN_mean = mean(ubial.C.N, na.rm = TRUE),
              ubial_CN_sd = sd(ubial.C.N, na.rm = TRUE),
              .groups = "drop") %>%
    mutate(ubial_CN_sem = ubial_CN_sd / sqrt(3)) # SEM calculation

  p <- ggplot(stage_data, aes(x = factor(WHC), y = ubial_CN_mean, fill = as.factor(Initial.Temperature))) +
    geom_bar(stat = "identity", position = position_dodge(0.9), color = "black") + # Add black outline
    geom_errorbar(aes(ymin = ubial_CN_mean - ubial_CN_sem, ymax = ubial_CN_mean + ubial_CN_sem),
                  width = 0.2, position = position_dodge(0.9), color = "black") + # Adjust error bar width and color
    labs(title = paste("ubial C/N - Stage", stage_num),
         x = "WHC", y = "ubial C/N (ug C/g soil)") +
    theme_classic() +
    scale_fill_discrete(name = "Initial Temperature") +
    theme(axis.title.x = element_text(face = "bold"), 
          axis.title.y = element_text(face = "bold"),
          plot.title = element_text(hjust = 0.5, face = "bold"))

  stage_plots[[paste0("Stage_", stage_num)]] <- p
}

# Print all the plots
stage_plots

```

### Anova results Microbial C/N

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# List to store plots and ANOVA results for each stage
stage_plots <- list()
anova_results <- list()

for (stage_num in 1:5) {
  stage_data <- NutriCamp %>%
    filter(Stage == stage_num) %>%
    group_by(WHC, Initial.Temperature) %>%
    summarise(ubial_CN_mean = mean(ubial.C.N, na.rm = TRUE),
              ubial_CN_sd = sd(ubial.C.N, na.rm = TRUE),
              .groups = "drop") %>%
    mutate(ubial_CN_sem = ubial_CN_sd / sqrt(3)) # SEM calculation

  # Check if WHC and Initial.Temperature have at least two levels
  if (n_distinct(stage_data$WHC) > 1 & n_distinct(stage_data$Initial.Temperature) > 1) {
    anova_result <- aov(ubial.C.N ~ WHC * Initial.Temperature, data = NutriCamp %>% filter(Stage == stage_num))
    anova_summary <- summary(anova_result)
    anova_results[[paste0("Stage_", stage_num)]] <- anova_summary
  } else {
    anova_results[[paste0("Stage_", stage_num)]] <- "ANOVA not performed: Insufficient levels in WHC or Initial.Temperature."
  }
}

# Display ANOVA results
anova_results


```

## Table: Individual ANOVA summary

| Stage | Variable | WHC (p-value) | Initial Temperature (p-value) | Interaction (p-value) |
|----|----|----|----|----|
| **3** | Extractable C | 3.66e-07 \*\*\* | 0.861 | 0.182 |
| **4** | Extractable C | 1.79e-07 \*\*\* | 0.655 | 0.454 |
| **5** | Extractable C | 0.000431 \*\*\* | 0.000566 \*\*\* | 0.280 |
| **3** | Extractable N | 3.66e-07 \*\*\* | 0.861 | 0.182 |
| **4** | Extractable N | 1.79e-07 \*\*\* | 0.655 | 0.454 |
| **5** | Extractable N | 0.000431 \*\*\* | 0.000566 \*\*\* | 0.280 |
| **3** | Microbial C | 0.00959 \*\* | 0.70776 | 0.39261 |
| **4** | Microbial C | 0.0067 \*\* | 0.7159 | 0.7778 |
| **5** | Microbial C | 0.320 | 0.757 | 0.097 |
| **3** | Microbial N | 0.3246 | 0.0953 . | 0.203 |
| **4** | Microbial N | 0.272 | 0.539 | 0.418 |
| **5** | Microbial N | 0.0460 \* | 0.561 | 0.0783 . |

## Evolution over stages per nutrient

#### Processed data

```{r, echo = FALSE, message = FALSE, warning = FALSE}
library(readr)
# Write to CSV file
long_NutriCamp <- read_csv("~/Desktop/2023-2024/Summer 24'/Data /long_NutriCamp.csv")
head(long_NutriCamp)
```

### Extractable C evolution Path 4 and path 5

I used the same code below to produce all the graphs in this section:

```{r}

# Filter the data for a specific variable (e.g., Extractable C)
ExC_variable_data <- long_NutriCamp %>%
  filter(Variable == "Extractable.C..ug.C.g.soil.") %>%
  mutate(
    Initial.Temperature = factor(Initial.Temperature, levels = c(25,35)), # temps have to be categorical
    Stage = factor(Stage, levels = 1:5), # stages have to be categorical
    WHC = factor(WHC) # WHC as a factor
  )

# Split the data into two paths: one for Stage 4, one for Stage 5
path4_data <- ExC_variable_data %>% filter(Stage %in% c(1, 2, 3, 4))
path5_data <- ExC_variable_data %>% filter(Stage %in% c(1, 2, 3, 5))

# Function to plot a single path
plot_path <- function(data, title) {
  ggplot(data, aes(x = Stage, y = Mean, group = interaction(WHC, Initial.Temperature))) +
    geom_line(aes(color = WHC, linetype = Initial.Temperature), size = 1) +
    geom_point(aes(shape = Initial.Temperature), size = 3) +
    geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM), width = 0.2) +
    scale_color_viridis_d(option = "plasma", name = "WHC (%)") +
    labs(
      title = title,
      x = "Stage", y = "Extractable C (ug C /g soil)",
      linetype = "Initial Temperature", shape = "Initial Temperature"
    ) +
    theme_classic() +
    theme(
      legend.position = "right",
      plot.title = element_text(hjust = 0.5, face = "bold"),
      axis.title = element_text(face = "bold"),
      strip.text = element_text(face = "bold")
    )
}

# Plot each path separately
plot_path4 <- plot_path(path4_data, "Evolution of Extractable C: Stages 1 → 2 → 3 → 4")
plot_path5 <- plot_path(path5_data, "Evolution of Extractable C: Stages 1 → 2 → 3 → 5")

library(patchwork)
plot_path4 / plot_path5 # Combine the two plots vertically
```

### Extractable N evolution Path 4 and path 5

```{r, echo = FALSE, message = FALSE, warning = FALSE}

# Filter the data for a specific variable (e.g., Extractable C)
ExN_variable_data <- long_NutriCamp %>%
  filter(Variable == "Extractable.N..ug.N.g.soil.") %>%
  mutate(
    Initial.Temperature = factor(Initial.Temperature, levels = c(25,35)), # Ensure temp are treated as categorical
    Stage = factor(Stage, levels = 1:5), # Ensure stages are treated as categorical
    WHC = factor(WHC) # WHC as a factor for consistent grouping
  )

```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# Split the data into two paths: one for Stage 4, one for Stage 5
path4_data <- ExN_variable_data %>% filter(Stage %in% c(1, 2, 3, 4))
path5_data <- ExN_variable_data %>% filter(Stage %in% c(1, 2, 3, 5))

# Function to plot a single path
plot_path <- function(data, title) {
  ggplot(data, aes(x = Stage, y = Mean, group = interaction(WHC, Initial.Temperature))) +
    geom_line(aes(color = WHC, linetype = Initial.Temperature), size = 1) +
    geom_point(aes(shape = Initial.Temperature), size = 3) +
    geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM), width = 0.2) +
    scale_color_viridis_d(option = "plasma", name = "WHC (%)") +
    labs(
      title = title,
      x = "Stage", y = "Extractable N (ug N/g soil)",
      linetype = "Initial Temperature", shape = "Initial Temperature"
    ) +
    theme_classic() +
    theme(
      legend.position = "right",
      plot.title = element_text(hjust = 0.5, face = "bold"),
      axis.title = element_text(face = "bold"),
      strip.text = element_text(face = "bold")
    )
}

# Plot each path separately
plot_path4 <- plot_path(path4_data, "Evolution of Extractable N: Stages 1 → 2 → 3 → 4")
plot_path5 <- plot_path(path5_data, "Evolution of Extractable N: Stages 1 → 2 → 3 → 5")

# Display the plots
library(patchwork)
plot_path4 / plot_path5 # Combine the two plots vertically

```

### Microbial C evolution Path 4 and path 5

```{r, echo = FALSE, message = FALSE, warning = FALSE}

# Filter the data for a specific variable (e.g., Extractable C)
UbC_variable_data <- long_NutriCamp %>%
  filter(Variable == "ubial.C..ug.C.g.soil.") %>%
  mutate(
    Initial.Temperature = factor(Initial.Temperature, levels = c(25,35)), # Ensure temp are treated as categorical
    Stage = factor(Stage, levels = 1:5), # Ensure stages are treated as categorical
    WHC = factor(WHC) # WHC as a factor for consistent grouping
  )

```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# Split the data into two paths: one for Stage 4, one for Stage 5
path4_data <- UbC_variable_data %>% filter(Stage %in% c(1, 2, 3, 4))
path5_data <- UbC_variable_data %>% filter(Stage %in% c(1, 2, 3, 5))

# Function to plot a single path
plot_path <- function(data, title) {
  ggplot(data, aes(x = Stage, y = Mean, group = interaction(WHC, Initial.Temperature))) +
    geom_line(aes(color = WHC, linetype = Initial.Temperature), size = 1) +
    geom_point(aes(shape = Initial.Temperature), size = 3) +
    geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM), width = 0.2) +
    scale_color_viridis_d(option = "plasma", name = "WHC (%)") +
    labs(
      title = title,
      x = "Stage", y = "Ubial C (ug C/g soil)",
      linetype = "Initial Temperature", shape = "Initial Temperature"
    ) +
    theme_classic() +
    theme(
      legend.position = "right",
      plot.title = element_text(hjust = 0.5, face = "bold"),
      axis.title = element_text(face = "bold"),
      strip.text = element_text(face = "bold")
    )
}

# Plot each path separately
plot_path4 <- plot_path(path4_data, "Evolution of Ubial C: Stages 1 → 2 → 3 → 4")
plot_path5 <- plot_path(path5_data, "Evolution of Ubial C: Stages 1 → 2 → 3 → 5")

# Display the plots
library(patchwork)
plot_path4 / plot_path5 # Combine the two plots vertically

```

### Microbial N evolution Path 4 and path 5

```{r, echo = FALSE, message = FALSE, warning = FALSE}

# Filter the data for a specific variable (e.g., Extractable C)
UbN_variable_data <- long_NutriCamp %>%
  filter(Variable == "ubial.N..ug.N.g.soil.") %>%
  mutate(
    Initial.Temperature = factor(Initial.Temperature, levels = c(25,35)), # Ensure temp are treated as categorical
    Stage = factor(Stage, levels = 1:5), # Ensure stages are treated as categorical
    WHC = factor(WHC) # WHC as a factor for consistent grouping
  )


```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# Split the data into two paths: one for Stage 4, one for Stage 5
path4_data <- UbN_variable_data %>% filter(Stage %in% c(1, 2, 3, 4))
path5_data <- UbN_variable_data %>% filter(Stage %in% c(1, 2, 3, 5))

# Function to plot a single path
plot_path <- function(data, title) {
  ggplot(data, aes(x = Stage, y = Mean, group = interaction(WHC, Initial.Temperature))) +
    geom_line(aes(color = WHC, linetype = Initial.Temperature), size = 1) +
    geom_point(aes(shape = Initial.Temperature), size = 3) +
    geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM), width = 0.2) +
    scale_color_viridis_d(option = "plasma", name = "WHC (%)") +
    labs(
      title = title,
      x = "Stage", y = "Ubial N (ug N/g soil)",
      linetype = "Initial Temperature", shape = "Initial Temperature"
    ) +
    theme_classic() +
    theme(
      legend.position = "right",
      plot.title = element_text(hjust = 0.5, face = "bold"),
      axis.title = element_text(face = "bold"),
      strip.text = element_text(face = "bold")
    )
}

# Plot each path separately
plot_path4 <- plot_path(path4_data, "Evolution of Ubial N: Stages 1 → 2 → 3 → 4")
plot_path5 <- plot_path(path5_data, "Evolution of Ubial N: Stages 1 → 2 → 3 → 5")

# Display the plots
library(patchwork)
plot_path4 / plot_path5 # Combine the two plots vertically

```

### Microbial C/N evolution Path 4 and path 5

```{r, echo = FALSE, message = FALSE, warning = FALSE}

# Filter the data for a specific variable (e.g., Extractable C)
UbCN_variable_data <- long_NutriCamp %>%
  filter(Variable == "ubial.C.N") %>%
  mutate(
    Initial.Temperature = factor(Initial.Temperature, levels = c(25,35)), # Ensure temp are treated as categorical
    Stage = factor(Stage, levels = 1:5), # Ensure stages are treated as categorical
    WHC = factor(WHC) # WHC as a factor for consistent grouping
  )

```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# Split the data into two paths: one for Stage 4, one for Stage 5
path4_data <- UbCN_variable_data %>% filter(Stage %in% c(1, 2, 3, 4))
path5_data <- UbCN_variable_data %>% filter(Stage %in% c(1, 2, 3, 5))

# Function to plot a single path
plot_path <- function(data, title) {
  ggplot(data, aes(x = Stage, y = Mean, group = interaction(WHC, Initial.Temperature))) +
    geom_line(aes(color = WHC, linetype = Initial.Temperature), size = 1) +
    geom_point(aes(shape = Initial.Temperature), size = 3) +
    geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM), width = 0.2) +
    scale_color_viridis_d(option = "plasma", name = "WHC (%)") +
    labs(
      title = title,
      x = "Stage", y = "Ubial C/N (ug C/g soil???)",
      linetype = "Initial Temperature", shape = "Initial Temperature"
    ) +
    theme_classic() +
    theme(
      legend.position = "right",
      plot.title = element_text(hjust = 0.5, face = "bold"),
      axis.title = element_text(face = "bold"),
      strip.text = element_text(face = "bold")
    )
}

# Plot each path separately
plot_path4 <- plot_path(path4_data, "Evolution of Ubial C/N: Stages 1 → 2 → 3 → 4")
plot_path5 <- plot_path(path5_data, "Evolution of Ubial C/N: Stages 1 → 2 → 3 → 5")

# Display the plots
library(patchwork)
plot_path4 / plot_path5 # Combine the two plots vertically

```

## ANOVA between stages of interest

```{r}
variables <- c("Extractable.C..ug.C.g.soil.", "Extractable.N..ug.N.g.soil.",
               "ubial.C..ug.C.g.soil.", "ubial.N..ug.N.g.soil.", "ubial.C.N")

# Define a function to perform the ANOVA for each variable
perform_anova <- function(variable) {
  
  # Stage 1 vs Stage 2 (moisture as the independent variable)
  stage1_stage2 <- NutriCamp %>%
    filter(Stage %in% c(1, 2)) %>%
    filter(!is.na(WHC))
  
  anova_stage1_stage2 <- aov(as.formula(paste(variable, "~ factor(WHC)")), data = stage1_stage2)
  summary_stage1_stage2 <- summary(anova_stage1_stage2)
  
  # Stage 2 vs Stage 3 (temperature as the independent variable)
  stage2_stage3 <- NutriCamp %>%
    filter(Stage %in% c(2, 3)) %>%
    filter(!is.na(Initial.Temperature))
  
  anova_stage2_stage3 <- aov(as.formula(paste(variable, "~ factor(Initial.Temperature)")), data = stage2_stage3)
  summary_stage2_stage3 <- summary(anova_stage2_stage3)
  
  # Stage 3 vs Stage 4 (both temperature and moisture as independent variables)
  stage3_stage4 <- NutriCamp %>%
    filter(Stage %in% c(3, 4)) %>%
    filter(!is.na(Initial.Temperature) & !is.na(WHC))
  
  anova_stage3_stage4 <- aov(as.formula(paste(variable, "~ factor(Initial.Temperature) * factor(WHC)")), data = stage3_stage4)
  summary_stage3_stage4 <- summary(anova_stage3_stage4)
  
  # Stage 3 vs Stage 5 (both temperature and moisture as independent variables)
  stage3_stage5 <- NutriCamp %>%
    filter(Stage %in% c(3, 5)) %>%
    filter(!is.na(Initial.Temperature) & !is.na(WHC))
  
  anova_stage3_stage5 <- aov(as.formula(paste(variable, "~ factor(Initial.Temperature) * factor(WHC)")), data = stage3_stage5)
  summary_stage3_stage5 <- summary(anova_stage3_stage5)
  
  # Return the results as a list
  return(list(
    variable = variable,
    stage1_stage2 = summary_stage1_stage2,
    stage2_stage3 = summary_stage2_stage3,
    stage3_stage4 = summary_stage3_stage4,
    stage3_stage5 = summary_stage3_stage5
  ))
}

# Apply the function to each variable and store results in a list
anova_results <- lapply(variables, perform_anova)

# Print the results for each variable
for (result in anova_results) {
  cat("\nVariable:", result$variable, "\n")
  cat("\nStage 1 vs Stage 2 (moisture):\n")
  print(result$stage1_stage2)
  cat("\nStage 2 vs Stage 3 (temperature):\n")
  print(result$stage2_stage3)
  cat("\nStage 3 vs Stage 4 (temperature and moisture):\n")
  print(result$stage3_stage4)
  cat("\nStage 3 vs Stage 5 (temperature and moisture):\n")
  print(result$stage3_stage5)
}
```

## Table: ANOVA Results for Extractable C, N, Ubial C, and Ubial N across Different Stages

| Variable | Stage Comparison | Factor | F Value | p-value | Significance |
|----|----|----|----|----|----|
| **Extractable C (ug C/g soil)** | Stage 3 vs Stage 4 | WHC | 4.326 | 0.0223 | \* |
|  | Stage 3 vs Stage 5 | WHC | 12.100 | 0.00014 | \*\*\* |
| **Extractable N (ug N/g soil)** | Stage 1 vs Stage 2 | WHC | 43.14 | 4.98e-06 | \*\*\* |
|  | Stage 3 vs Stage 4 | WHC | 234.162 | \<2e-16 | \*\*\* |
|  | Stage 3 vs Stage 5 | WHC | 25.232 | 3.74e-07 | \*\*\* |
| **Microbial C (ug C/g soil)** | Stage 3 vs Stage 4 | WHC | 13.029 | 8.46e-05 | \*\*\* |
| **Microbial N (ug N/g soil)** | Stage 1 vs Stage 2 | WHC | 5.174 | 0.0205 | \* |
|  | Stage 3 vs Stage 4 | Initial Temperature | 7.374 | 0.0109 | \* |
|  |  | WHC | 17.759 | 8.16e-06 | \*\*\* |
|  | Stage 3 vs Stage 5 | WHC | 6.843 | 0.00356 | \*\* |

**Significance Codes**:\
0 ‘ \*\*\* ’ 0.001 ‘ \*\* ’ 0.01 ‘ \* ’ 0.05 ‘ . ’ 0.1 ‘’ 1
